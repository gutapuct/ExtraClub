<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	
    
    
	xmlns:external="clr-namespace:Telerik.Windows.Controls.External"
	xmlns:telerik="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
    xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"    
    xmlns:dragDrop="clr-namespace:Telerik.Windows.Controls.DragDrop;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
	xmlns:telerikDragDrop="clr-namespace:Telerik.Windows.DragDrop;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
    xmlns:animation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
    xmlns:telerikChromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:telerikTransitions="clr-namespace:Telerik.Windows.Controls.TransitionEffects;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
    xmlns:telerikTransitonControl="clr-namespace:Telerik.Windows.Controls.TransitionControl;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
    xmlns:telerikQuickStart="clr-namespace:Telerik.Windows.Controls.QuickStart;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
	xmlns:filteringEditors="clr-namespace:Telerik.Windows.Controls.Filtering.Editors;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
	xmlns:telerikShapes="clr-namespace:Telerik.Windows.Shapes;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
	xmlns:transitionControl="clr-namespace:Telerik.Windows.Controls.TransitionControl;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
    

    >

    <SolidColorBrush x:Key="ControlOuterBorder_Normal" Color="{DynamicResource ControlBorderColor}" />
<LinearGradientBrush x:Key="ControlBackground_Normal" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFFCFCFA" Offset="0" />
		<GradientStop Color="#FFFCFCFA" Offset="0.15" />
		<GradientStop Color="#FFFAFAF4" Offset="1" />
	</LinearGradientBrush>
<SolidColorBrush x:Key="ControlForeground_Normal" Color="#FF312E25" />
<SolidColorBrush x:Key="ButtonForeground_Normal" Color="#FF312E25" />
<SolidColorBrush x:Key="ButtonForeground_Pressed" Color="#FFFFFFFF" />
<SolidColorBrush x:Key="ButtonForeground_Disabled" Color="#FF948C70" />
<CornerRadius x:Key="ControlOuterBorder_CornerRadius">2</CornerRadius>
<SolidColorBrush x:Key="ControlInnerBorder_Normal" Color="#FFFFFFFF" />
<SolidColorBrush x:Key="ControlOuterBorder_Focused" Color="{DynamicResource ControlBorderColor}" />
<SolidColorBrush x:Key="ControlBackground_Focused" Color="Transparent" />
<SolidColorBrush x:Key="ControlInnerBorder_Focused" Color="Transparent" />
    <SolidColorBrush x:Key="ControlOuterBorder_MouseOver" Color="{DynamicResource ControlBorderColor}" />
<LinearGradientBrush x:Key="ControlBackground_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ButtonTopMouseOverColor}" Offset="0" />
        <GradientStop Color="{DynamicResource ButtonBottomMouseOverColor}" Offset="1" />
    </LinearGradientBrush>
<SolidColorBrush x:Key="ControlInnerBorder_MouseOver" Color="Transparent" />
    <SolidColorBrush x:Key="ControlOuterBorder_Pressed" Color="{DynamicResource ControlBorderColor}" />
<LinearGradientBrush x:Key="ControlBackground_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ButtonTopPressedColor}" Offset="0" />
        <GradientStop Color="{DynamicResource ButtonBottomPressedColor}" Offset="1" />
    </LinearGradientBrush>
<LinearGradientBrush x:Key="ControlInnerBorder_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#0065A5BB" Offset="0" />
		<GradientStop Color="#00CCEDF8" Offset="0.143" />
	</LinearGradientBrush>
<SolidColorBrush x:Key="ControlOuterBorder_Disabled" Color="#FFC9C9C9" />
<LinearGradientBrush x:Key="ControlBackground_Disabled" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFE3E8EB" Offset="1" />
		<GradientStop Color="White" />
	</LinearGradientBrush>
<SolidColorBrush x:Key="ControlInnerBorder_Disabled" Color="Transparent" />
    <SolidColorBrush x:Key="ControlOuterBorder_Checked" Color="{DynamicResource ControlBorderColor}" />
<LinearGradientBrush x:Key="ControlBackground_Checked" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFFCFCFA" Offset="0.027" />
		<GradientStop Color="#FFFCFCFA" Offset="0.146" />
		<GradientStop Color="#FFFAFAF4" Offset="1" />
	</LinearGradientBrush>
<LinearGradientBrush x:Key="ControlInnerBorder_Checked" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#0065A5BB" Offset="0" />
		<GradientStop Color="#00CCEDF8" Offset="0.143" />
		<GradientStop Color="#00CCEDF8" Offset="1" />
	</LinearGradientBrush>
<SolidColorBrush x:Key="ControlOuterBorder_DisabledChecked" Color="#FFc9c9c9" />
<LinearGradientBrush x:Key="ControlBackground_DisabledChecked" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFc9c9c9" Offset="0.146" />
		<GradientStop Color="#FFC9c9c9" Offset="1" />
		<GradientStop Color="#FFc9c9c9" Offset="0.027" />
	</LinearGradientBrush>
<LinearGradientBrush x:Key="ControlInnerBorder_DisabledChecked" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFc9c9c9" Offset="0" />
		<GradientStop Color="#00E1F8FF" Offset="1" />
		<GradientStop Color="#00CCEDF8" Offset="0.143" />
	</LinearGradientBrush>
    <SolidColorBrush x:Key="ControlOuterBorder_MouseOverChecked" Color="{DynamicResource ControlBorderColor}" />
<LinearGradientBrush x:Key="ControlBackground_MouseOverChecked" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ButtonTopMouseOverColor}" Offset="0" />
        <GradientStop Color="{DynamicResource ButtonBottomMouseOverColor}" Offset="1" />
	</LinearGradientBrush>
<LinearGradientBrush x:Key="ControlInnerBorder_MouseOverChecked" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#0077B0C4" Offset="0" />
		<GradientStop Color="#FF47b11e" Offset="0.143" />
		<GradientStop Color="#00CCEDF8" Offset="1" />
	</LinearGradientBrush>
<SolidColorBrush x:Key="ControlElement_Normal" Color="#FF000000" />
<SolidColorBrush x:Key="ControlOuterBorder" Color="#FFB2B2B2" />
<LinearGradientBrush EndPoint="0.5,1" x:Key="ControlBackground" StartPoint="0.5,0">
		<GradientStop Color="White" />
		<GradientStop Color="#FFE4E6E8" Offset="1" />
	</LinearGradientBrush>
<SolidColorBrush x:Key="ControlElement_MouseOver" Color="#FF000000" />
<SolidColorBrush x:Key="ControlElement_Active" Color="#FF000000" />
<SolidColorBrush x:Key="ControlElement_Disabled" Color="#FF9D9D9D" />
<CornerRadius x:Key="ControlInnerBorder_CornerRadius">1</CornerRadius>
    <SolidColorBrush x:Key="ControlOuterBorder_Highlighted" Color="{DynamicResource ControlBorderColor}" />
<LinearGradientBrush x:Key="ControlBackground_Highlighted" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ButtonTopMouseOverColor}" Offset="0" />
        <GradientStop Color="{DynamicResource ButtonBottomMouseOverColor}" Offset="1" />
    </LinearGradientBrush>
<SolidColorBrush x:Key="ControlInnerBorder_Highlighted" Color="Transparent" />

	
	<telerik:BooleanToVisibilityConverter x:Key="BooleanToOpacityConverterInstance" />
	<Style TargetType="telerik:RadButton"
		x:Key="{telerik:ThemeResourceKey ThemeType=
		external:SummerThemeExternal , ElementType=telerik:RadButton}"
		 >
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="BorderBrush"
				Value="{StaticResource ControlOuterBorder_Normal}" />
		<Setter Property="Background"
				Value="{StaticResource ControlBackground_Normal}" />
		<Setter Property="Foreground"
				Value="{StaticResource ButtonForeground_Normal}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="3" />
		<Setter Property="CornerRadius"
				Value="{StaticResource ControlOuterBorder_CornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadButton">
					<Grid SnapsToDevicePixels="True"
						 >
						
						<Border x:Name="OuterBorder"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								CornerRadius="{TemplateBinding CornerRadius}">
							<Border x:Name="InnerBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="0"
									CornerRadius="{TemplateBinding CornerRadius}"
									BorderBrush="{StaticResource ControlInnerBorder_Normal}" />
						</Border>
						<ContentPresenter x:Name="Content"
										  Margin="{TemplateBinding Padding}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								RecognizesAccessKey="True"
							 />
							<!-- Focus -->
							<Border x:Name="CommonStatesWrapper">
								<Border x:Name="FocusVisual"
										Visibility="Collapsed"
										Opacity="0"
										BorderThickness="1"
										CornerRadius="{TemplateBinding CornerRadius}"
										BorderBrush="{StaticResource ControlOuterBorder_Focused}"
										Background="{StaticResource ControlBackground_Focused}">
									<Border x:Name="FocusInnerVisual"
											BorderThickness="0"
											CornerRadius="{TemplateBinding CornerRadius}"
											BorderBrush="{StaticResource ControlInnerBorder_Focused}" />
								</Border>
							</Border>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_MouseOver}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_MouseOver}" />
                            <Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_MouseOver}" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>
						<Trigger Property="IsPressed"
								 Value="True">
							<Setter TargetName="CommonStatesWrapper"
									Property="Opacity"
									Value="0" />
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Pressed}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_Pressed}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Pressed}" />
                            <Setter
									Property="Foreground"
									Value="{StaticResource ButtonForeground_Pressed}" />

                        </Trigger> 
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsBackgroundVisible"
										   Value="False"></Condition>
								<Condition Property="IsMouseOver"
										   Value="False"></Condition>
							</MultiTrigger.Conditions>
							<Setter TargetName="OuterBorder"
									Property="Opacity"
									Value="0" />
                            <Setter
									Property="Foreground"
									Value="{StaticResource ButtonForeground_Normal}" />

                        </MultiTrigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter TargetName="Content"
									Property="Opacity"
									Value="0.5" />
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Disabled}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_Disabled}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Disabled}" />
                            <Setter
									Property="Foreground"
									Value="{StaticResource ButtonForeground_Disabled}" />
                        </Trigger>
						<Trigger Property="IsFocused"
								 Value="True">
							<Setter TargetName="FocusVisual"
									Property="Visibility"
									Value="Visible" />
							<Setter TargetName="FocusVisual"
									Property="Opacity"
									Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="telerik:RadToggleButton"
		x:Key="{telerik:ThemeResourceKey ThemeType=
		external:SummerThemeExternal , ElementType=telerik:RadToggleButton}"
		 >
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="BorderBrush"
				Value="{StaticResource ControlOuterBorder_Normal}" />
		<Setter Property="Background"
				Value="{StaticResource ControlBackground_Normal}" />
		<Setter Property="Foreground"
				Value="{StaticResource ButtonForeground_Normal}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="3" />
		<Setter Property="CornerRadius"
				Value="{StaticResource ControlOuterBorder_CornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadToggleButton">
					<Grid SnapsToDevicePixels="True"
						 >
						
						<Border x:Name="OuterBorder"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								CornerRadius="{TemplateBinding CornerRadius}">
							<Border x:Name="InnerBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="0"
									CornerRadius="{TemplateBinding CornerRadius}"
									BorderBrush="{StaticResource ControlInnerBorder_Normal}" />
						</Border>
						<!-- checked -->
						<Border x:Name="CheckedVisual"
								Opacity="0"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{StaticResource ControlOuterBorder_Checked}"
								CornerRadius="{TemplateBinding CornerRadius}">
							<Border x:Name="InnerCheckedVisual"
									Background="{StaticResource ControlBackground_Checked}"
									BorderThickness="0"
									CornerRadius="{TemplateBinding CornerRadius}"
									BorderBrush="{StaticResource ControlInnerBorder_Checked}" />
						</Border>
						<ContentPresenter x:Name="Content"
										  Margin="{TemplateBinding Padding}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  RecognizesAccessKey="True"
							 >
						</ContentPresenter>
						<!-- Focus -->
						<Border x:Name="CommonStatesWrapper">
							<Border x:Name="FocusVisual"
									Visibility="Collapsed"
									Opacity="0"
									BorderThickness="1"
									CornerRadius="{TemplateBinding CornerRadius}"
									BorderBrush="{StaticResource ControlOuterBorder_Focused}"
									Background="{StaticResource ControlBackground_Focused}">
								<Border x:Name="FocusInnerVisual"
										BorderThickness="0"
										CornerRadius="{TemplateBinding CornerRadius}"
										BorderBrush="{StaticResource ControlInnerBorder_Focused}" />
							</Border>
						</Border>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
								 Value="True">
							<Setter TargetName="CheckedVisual"
									Property="Opacity"
									Value="1" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled"
										   Value="False" />
								<Condition Property="IsChecked"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Content"
									Property="Opacity"
									Value="0.5" />
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_DisabledChecked}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_DisabledChecked}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_DisabledChecked}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsBackgroundVisible"
										   Value="False"></Condition>
								<Condition Property="IsMouseOver"
										   Value="False"></Condition>
							</MultiTrigger.Conditions>
							<Setter TargetName="OuterBorder"
									Property="Opacity"
									Value="0" />
						</MultiTrigger>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_MouseOver}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_MouseOver}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_MouseOver}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="True">
							<Setter TargetName="CommonStatesWrapper"
									Property="Opacity"
									Value="0" />
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Pressed}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_Pressed}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Pressed}" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter TargetName="Content"
									Property="Opacity"
									Value="0.5" />
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Disabled}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_Disabled}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Disabled}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsFocused"
										   Value="True" />
								<Condition Property="IsChecked"
										   Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="FocusVisual"
									Property="Visibility"
									Value="Visible" />
							<Setter TargetName="FocusVisual"
									Property="Opacity"
									Value="1" />
						</MultiTrigger>
						<!--<Trigger Property="IsFocused"
								 Value="True">
							<Setter TargetName="FocusVisual"
									Property="Visibility"
									Value="Visible" />
							<Setter TargetName="FocusVisual"
									Property="Opacity"
									Value="1" />					
						</Trigger>-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
										   Value="True" />
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsPressed"
										   Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="CheckedVisual"
									Property="Opacity"
									Value="1" />
							<Setter TargetName="CheckedVisual"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_MouseOverChecked}" />
							<Setter TargetName="InnerCheckedVisual"
									Property="Background"
									Value="{StaticResource ControlBackground_MouseOverChecked}" />
							<Setter TargetName="InnerCheckedVisual"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_MouseOverChecked}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="telerik:RadRadioButton"
		x:Key="{telerik:ThemeResourceKey ThemeType=
		external:SummerThemeExternal , ElementType=telerik:RadRadioButton}"
		 >
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="BorderBrush"
				Value="{StaticResource ControlOuterBorder_Normal}" />
		<Setter Property="Background"
				Value="{StaticResource ControlBackground_Normal}" />
		<Setter Property="Foreground"
				Value="{StaticResource ButtonForeground_Normal}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="3" />
		<Setter Property="CornerRadius"
				Value="{StaticResource ControlOuterBorder_CornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadRadioButton">
					<Grid SnapsToDevicePixels="True"
						 >
						
						<Border x:Name="OuterBorder"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								CornerRadius="{TemplateBinding CornerRadius}">
							<Border x:Name="InnerBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="0"
									CornerRadius="{TemplateBinding CornerRadius}"
									BorderBrush="{StaticResource ControlInnerBorder_Normal}" />
						</Border>
						<!-- checked -->
						<Border x:Name="CheckedVisual"
								Opacity="0"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{StaticResource ControlOuterBorder_Checked}"
								CornerRadius="{TemplateBinding CornerRadius}">
							<Border x:Name="InnerCheckedVisual"
									Background="{StaticResource ControlBackground_Checked}"
									BorderThickness="0"
									CornerRadius="{TemplateBinding CornerRadius}"
									BorderBrush="{StaticResource ControlInnerBorder_Checked}" />
						</Border>
						<ContentPresenter x:Name="Content"
										  Margin="{TemplateBinding Padding}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								RecognizesAccessKey="True"
							 />
							<!-- Focus -->
							<Border x:Name="CommonStatesWrapper">
								<Border x:Name="FocusVisual"
										Visibility="Collapsed"
										Opacity="0"
										BorderThickness="1"
										CornerRadius="{TemplateBinding CornerRadius}"
										BorderBrush="{StaticResource ControlOuterBorder_Focused}"
										Background="{StaticResource ControlBackground_Focused}">
									<Border x:Name="FocusInnerVisual"
											BorderThickness="0"
											CornerRadius="{TemplateBinding CornerRadius}"
											BorderBrush="{StaticResource ControlInnerBorder_Focused}" />
								</Border>
							</Border>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
								 Value="True">
							<Setter TargetName="CheckedVisual"
									Property="Opacity"
									Value="1" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled"
										   Value="False" />
								<Condition Property="IsChecked"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Content"
									Property="Opacity"
									Value="0.5" />
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_DisabledChecked}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_DisabledChecked}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_DisabledChecked}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsBackgroundVisible"
										   Value="False"></Condition>
								<Condition Property="IsMouseOver"
										   Value="False"></Condition>
							</MultiTrigger.Conditions>
							<Setter TargetName="OuterBorder"
									Property="Opacity"
									Value="0" />
						</MultiTrigger>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_MouseOver}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_MouseOver}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_MouseOver}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="True">
							<Setter TargetName="CommonStatesWrapper"
									Property="Opacity"
									Value="0" />
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Pressed}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_Pressed}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Pressed}" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter TargetName="Content"
									Property="Opacity"
									Value="0.5" />
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Disabled}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_Disabled}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Disabled}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsFocused"
										   Value="True" />
								<Condition Property="IsChecked"
										   Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="FocusVisual"
									Property="Visibility"
									Value="Visible" />
							<Setter TargetName="FocusVisual"
									Property="Opacity"
									Value="1" />
						</MultiTrigger>
						<!--<Trigger Property="IsFocused"
								 Value="True">
							<Setter TargetName="FocusVisual"
									Property="Visibility"
									Value="Visible" />
							<Setter TargetName="FocusVisual"
									Property="Opacity"
									Value="1" />
						</Trigger>-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
										   Value="True" />
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsPressed"
										   Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="CheckedVisual"
									Property="Opacity"
									Value="1" />
							<Setter TargetName="CheckedVisual"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_MouseOverChecked}" />
							<Setter TargetName="InnerCheckedVisual"
									Property="Background"
									Value="{StaticResource ControlBackground_MouseOverChecked}" />
							<Setter TargetName="InnerCheckedVisual"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_MouseOverChecked}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="telerik:RadDropDownButton" 
        x:Key="{telerik:ThemeResourceKey ThemeType=
		external:SummerThemeExternal , ElementType=telerik:RadDropDownButton}"
		 >
		<Setter Property="IsOpen"
				Value="false" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="BorderBrush"
				Value="{StaticResource ControlOuterBorder_Normal}" />
		<Setter Property="Background"
				Value="{StaticResource ControlBackground_Normal}" />
		<Setter Property="Foreground"
				Value="{StaticResource ButtonForeground_Normal}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="3" />
		<Setter Property="CornerRadius"
				Value="{StaticResource ControlOuterBorder_CornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadDropDownButton">
					<Grid SnapsToDevicePixels="True"
						 >
						
						<Border x:Name="OuterBorder"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								CornerRadius="{TemplateBinding CornerRadius}">
							<Border x:Name="InnerBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="0"
									CornerRadius="{TemplateBinding CornerRadius}"
									BorderBrush="{StaticResource ControlInnerBorder_Normal}" />
						</Border>
						<!-- checked -->
						<Border x:Name="CheckedVisual"
								Opacity="0"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{StaticResource ControlOuterBorder_Checked}"
								CornerRadius="{TemplateBinding CornerRadius}">
							<Border x:Name="InnerCheckedVisual"
									Background="{StaticResource ControlBackground_Checked}"
									BorderThickness="0"
									CornerRadius="{TemplateBinding CornerRadius}"
									BorderBrush="{StaticResource ControlInnerBorder_Checked}" />
						</Border>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<ContentPresenter x:Name="Content"
											  Grid.Row="1"
											  Grid.Column="1"
											  Margin="{TemplateBinding Padding}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								RecognizesAccessKey="True"
								 />
								<Path x:Name="DropDownIndicator"
									  Grid.Row="2"
									  Grid.Column="1"
									  IsHitTestVisible="False"
									  Visibility="{TemplateBinding DropDownIndicatorVisibility}"
									  Fill="{StaticResource ControlElement_Normal}"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center"
									  RenderTransformOrigin="0.5,0.5"
									  Margin="5,3,5,3"
									  Data="M0,0 L5,0 5,1 4,1 4,2 3,2 3,3 2,3 2,2 1,2 1,1 0,1 0,0 z"
								 SnapsToDevicePixels="True"
									 />
						</Grid>
						
						<Popup x:Name="DropDownPopup"
							   AllowsTransparency="True"
							   StaysOpen="False"
							   Focusable="false"
							   Placement="Bottom"
							   IsOpen="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
							
							
								<Grid>
									<Border x:Name="DropDownPopupBorder"
											BorderBrush="{StaticResource ControlOuterBorder}"
											Background="{StaticResource ControlBackground}"
											BorderThickness="1"
											CornerRadius="0"
											MinWidth="3"
											MinHeight="3"
											Width="{TemplateBinding DropDownWidth}"
											Height="{TemplateBinding DropDownHeight}"
											MaxWidth="{TemplateBinding DropDownMaxWidth}"
											MaxHeight="{TemplateBinding DropDownMaxHeight}">
										<ContentPresenter x:Name="DropDownPopupContent"
														  Content="{TemplateBinding DropDownContent}"
														  ContentTemplate="{TemplateBinding DropDownContentTemplate}"
														  HorizontalAlignment="Stretch"
														  VerticalAlignment="Stretch"
														  DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}" />
									</Border>
								</Grid>
								
						</Popup>
						
						
						<!-- Focus -->
						<Border x:Name="CommonStatesWrapper">
							<Border x:Name="FocusVisual"
									Visibility="Collapsed"
									Opacity="0"
									BorderThickness="1"
									CornerRadius="{TemplateBinding CornerRadius}"
									BorderBrush="{StaticResource ControlOuterBorder_Focused}"
									Background="{StaticResource ControlBackground_Focused}">
								<Border x:Name="FocusInnerVisual"
										BorderThickness="1"
										CornerRadius="{TemplateBinding CornerRadius}"
										BorderBrush="{StaticResource ControlInnerBorder_Focused}" />
							</Border>
						</Border>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_MouseOver}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_MouseOver}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_MouseOver}" />
							<Setter Property="Fill"
									TargetName="DropDownIndicator"
									Value="{StaticResource ControlElement_MouseOver}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="True">
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Pressed}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_Pressed}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Pressed}" />
							<Setter Property="Fill"
									TargetName="DropDownIndicator"
									Value="{StaticResource ControlElement_Active}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsBackgroundVisible"
										   Value="False"></Condition>
								<Condition Property="IsMouseOver"
										   Value="False"></Condition>
							</MultiTrigger.Conditions>
							<Setter TargetName="OuterBorder"
									Property="Opacity"
									Value="0" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsFocused"
										   Value="True" />
								<Condition Property="IsPressed"
										   Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="FocusVisual"
									Property="Visibility"
									Value="Visible" />
							<Setter TargetName="FocusVisual"
									Property="Opacity"
									Value="1" />
						</MultiTrigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter Property="Opacity"
									TargetName="Content"
									Value="0.5" />
							<Setter Property="Fill"
									TargetName="DropDownIndicator"
									Value="{StaticResource ControlElement_Disabled}" />
							<Setter TargetName="OuterBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Disabled}" />
							<Setter TargetName="InnerBorder"
									Property="Background"
									Value="{StaticResource ControlBackground_Disabled}" />
							<Setter TargetName="InnerBorder"
									Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Disabled}" />
						</Trigger>
						<Trigger Property="IsOpen"
								 Value="True">
							<Setter TargetName="CheckedVisual"
									Property="Opacity"
									Value="1" />
							<Setter Property="Fill"
									TargetName="DropDownIndicator"
									Value="{StaticResource ControlElement_Active}" />
						</Trigger>
						<Trigger Property="DropDownButtonPosition"
								 Value="Bottom" />
						<Trigger Property="DropDownButtonPosition"
								 Value="Left">
							<Setter TargetName="DropDownIndicator"
									Property="Grid.Column"
									Value="0" />
							<Setter TargetName="DropDownIndicator"
									Property="Grid.Row"
									Value="1" />
						</Trigger>
						<Trigger Property="DropDownButtonPosition"
								 Value="Top">
							<Setter TargetName="DropDownIndicator"
									Property="Grid.Column"
									Value="1" />
							<Setter TargetName="DropDownIndicator"
									Property="Grid.Row"
									Value="0" />
						</Trigger>
						<Trigger Property="DropDownButtonPosition"
								 Value="Right">
							<Setter TargetName="DropDownIndicator"
									Property="Grid.Column"
									Value="2" />
							<Setter TargetName="DropDownIndicator"
									Property="Grid.Row"
									Value="1" />
						</Trigger>
						<Trigger Property="DropDownPlacement"
								 Value="Absolute" />
						<Trigger Property="DropDownPlacement"
								 Value="Bottom" />
						<Trigger Property="DropDownPlacement"
								 Value="Center" />
						<Trigger Property="DropDownPlacement"
								 Value="Top">
							<Setter TargetName="DropDownPopup"
									Property="Placement"
									Value="Top" />
							<Setter TargetName="DropDownIndicator"
									Property="LayoutTransform">
								<Setter.Value>
									<TransformGroup>
										<RotateTransform Angle="180" />
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="DropDownPlacement"
								 Value="Left">
							<Setter TargetName="DropDownPopup"
									Property="Placement"
									Value="Left" />
							<Setter TargetName="DropDownIndicator"
									Property="LayoutTransform">
								<Setter.Value>
									<TransformGroup>
										<RotateTransform Angle="90" />
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="DropDownPlacement"
								 Value="Right">
							<Setter TargetName="DropDownPopup"
									Property="Placement"
									Value="Right" />
							<Setter TargetName="DropDownIndicator"
									Property="LayoutTransform">
								<Setter.Value>
									<TransformGroup>
										<RotateTransform Angle="-90" />
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="toggleStyle" TargetType="telerik:RadToggleButton">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground_Normal}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}" />
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadToggleButton">
					<Grid SnapsToDevicePixels="True"
						 >
						
						<Border x:Name="OuterBorder"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								CornerRadius="{TemplateBinding CornerRadius}" >
							<Border x:Name="InnerBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="0"
									CornerRadius="{StaticResource ControlInnerBorder_CornerRadius}"
									BorderBrush="{StaticResource ControlInnerBorder_Normal}" />
						</Border>
						<!-- checked -->
						<Border x:Name="CheckedVisual"
								Opacity="0"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{StaticResource ControlOuterBorder_Checked}"
								CornerRadius="{TemplateBinding CornerRadius}">
							<Border x:Name="InnerCheckedVisual"
									Background="{StaticResource ControlBackground_Checked}"
									BorderThickness="0"
									CornerRadius="{StaticResource ControlInnerBorder_CornerRadius}"
									BorderBrush="{StaticResource ControlInnerBorder_Checked}" />
						</Border>
						<Path x:Name="DropDownIndicator"
							  IsHitTestVisible="False"
							  Fill="{StaticResource ControlElement_Normal}"
							  HorizontalAlignment="Center"
							  VerticalAlignment="Center"
							  RenderTransformOrigin="0.5,0.5"
							  Margin="5,3,5,3"
							  Data="M0,0 L5,0 5,1 4,1 4,2 3,2 3,3 2,3 2,2 1,2 1,1 0,1 0,0 z"
							  SnapsToDevicePixels="True"
							 >
							<Path.RenderTransform>
								<RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(telerik:RadSplitButton.ToggleContentRotateAngle)}"></RotateTransform>
							</Path.RenderTransform>
						</Path>
                        
						
					</Grid>
					
					<ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush"  Value="Transparent" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush"  Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
							<Setter TargetName="CheckedVisual" Property="Opacity" Value="1" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled"  Value="False" />
								<Condition Property="IsChecked" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="DropDownIndicator" Property="Opacity" Value="0.5" />
							<Setter TargetName="OuterBorder" Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_DisabledChecked}" />
							<Setter TargetName="InnerBorder" Property="Background"
									Value="{StaticResource ControlBackground_DisabledChecked}" />
							<Setter TargetName="InnerBorder" Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_DisabledChecked}" />
						</MultiTrigger>
						<Trigger Property="IsMouseOver"  Value="true">
							<Setter TargetName="OuterBorder" Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_MouseOver}" />
							<Setter TargetName="InnerBorder" Property="Background"
									Value="{StaticResource ControlBackground_MouseOver}" />
							<Setter TargetName="InnerBorder" Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_MouseOver}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="OuterBorder" Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Pressed}" />
							<Setter TargetName="InnerBorder" Property="Background"
									Value="{StaticResource ControlBackground_Pressed}" />
							<Setter TargetName="InnerBorder" Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Pressed}" />
						</Trigger>
                       
						<Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="OuterBorder" Property="BorderBrush"  Value="Transparent" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush"  Value="Transparent" />
                            <Setter TargetName="DropDownIndicator" Property="Opacity" Value="0.5" />
							<Setter TargetName="OuterBorder" Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Disabled}" />
							<Setter TargetName="InnerBorder" Property="Background"
									Value="{StaticResource ControlBackground_Disabled}" />
							<Setter TargetName="InnerBorder" Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Disabled}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True" />
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsPressed" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="CheckedVisual" Property="Opacity" Value="1" />
							<Setter TargetName="CheckedVisual" Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_MouseOverChecked}" />
							<Setter TargetName="InnerCheckedVisual" Property="Background"
									Value="{StaticResource ControlBackground_MouseOverChecked}" />
							<Setter TargetName="InnerCheckedVisual" Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_MouseOverChecked}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
            
	<Style x:Key="buttonStyle"
		   TargetType="telerik:RadButton">
		<Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground_Normal}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadButton">
					<Grid SnapsToDevicePixels="True"
						 >
						
						<Border x:Name="OuterBorder"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								CornerRadius="{TemplateBinding CornerRadius}">
							<Border x:Name="InnerBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="0"
									CornerRadius="{StaticResource ControlInnerBorder_CornerRadius}"
									BorderBrush="{StaticResource ControlInnerBorder_Normal}" />
						</Border>
						<ContentPresenter x:Name="Content"
										  Margin="{TemplateBinding Padding}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								RecognizesAccessKey="True"
							 />
							
					</Grid>
					
					<ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush"  Value="Transparent" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush"  Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="OuterBorder" Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_MouseOver}" />
							<Setter TargetName="InnerBorder" Property="Background"
									Value="{StaticResource ControlBackground_MouseOver}" />
							<Setter TargetName="InnerBorder" Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_MouseOver}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="OuterBorder" Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Pressed}" />
							<Setter TargetName="InnerBorder" Property="Background"
									Value="{StaticResource ControlBackground_Pressed}" />
							<Setter TargetName="InnerBorder" Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Pressed}" />
						</Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="OuterBorder" Property="BorderBrush"  Value="Transparent" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush"  Value="Transparent" />
                            <Setter TargetName="Content" Property="Opacity" Value="0.5" />
							<Setter TargetName="OuterBorder" Property="BorderBrush"
									Value="{StaticResource ControlOuterBorder_Disabled}" />
							<Setter TargetName="InnerBorder" Property="Background"
									Value="{StaticResource ControlBackground_Disabled}" />
							<Setter TargetName="InnerBorder" Property="BorderBrush"
									Value="{StaticResource ControlInnerBorder_Disabled}" />
						</Trigger>
                        <Trigger Property="IsFocused" Value="True" />
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
        
	<Style TargetType="telerik:RadSplitButton"
		x:Key="{telerik:ThemeResourceKey ThemeType=
		external:SummerThemeExternal , ElementType=telerik:RadSplitButton}"
		 >
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="IsOpen"
				Value="false" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="TogglePartStyle"
				Value="{StaticResource toggleStyle}" />
		<Setter Property="ButtonPartStyle"
				Value="{StaticResource buttonStyle}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource ControlOuterBorder_Normal}" />
		<Setter Property="Background"
				Value="{StaticResource ControlBackground_Normal}" />
		<Setter Property="Foreground"
				Value="{StaticResource ButtonForeground_Normal}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="3" />
		<Setter Property="CornerRadius"
				Value="{StaticResource ControlOuterBorder_CornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadSplitButton">
					<Grid>
						


                        <Border x:Name="OuterBorder"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsBackgroundVisible, Converter={StaticResource BooleanToOpacityConverterInstance}}">
                            <Border x:Name="InnerBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="0"
									BorderBrush="{StaticResource ControlInnerBorder_Normal}" />
                        </Border>

                        <!-- CheckedVisual -->
                        <Border x:Name="CheckedVisual" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{StaticResource ControlOuterBorder_Highlighted}"
								CornerRadius="{TemplateBinding CornerRadius}" >
                            <Border Background="{StaticResource ControlBackground_Highlighted}"
									BorderThickness="0"
									BorderBrush="{StaticResource ControlInnerBorder_Highlighted}" />
                        </Border>

                        
                        <Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<telerik:RadToggleButton x:Name="DropDownPart"
													 IsTabStop="false"
													 Margin="0,-1,0,0"
													 Grid.Column="1"
													 Grid.Row="2"
													 MinWidth="11"
													 MinHeight="7"
													 Visibility="{TemplateBinding DropDownIndicatorVisibility}"
													 Style="{TemplateBinding TogglePartStyle}"
													 
													  IsChecked="{Binding Path=IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
													  ></telerik:RadToggleButton>
							<telerik:RadButton x:Name="ButtonPart"
											   Grid.Row="1"
											   Grid.Column="1"
											   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay,
															Path=IsButtonPartVisible, Converter={StaticResource BooleanToOpacityConverterInstance}}"
											   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											   Style="{TemplateBinding ButtonPartStyle}"
											   Padding="{TemplateBinding Padding}"
											   Foreground="{TemplateBinding Foreground}"
											   Content="{TemplateBinding Content}"
											   ContentTemplate="{TemplateBinding ContentTemplate}"
											   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"></telerik:RadButton>
						</Grid>
						
						<Popup x:Name="DropDownPopup"
							   AllowsTransparency="True"
							   StaysOpen="False"
							   Focusable="false"
							   Placement="Bottom"
							   IsOpen="{Binding Path=IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
							
							
								<Grid>
									<Border x:Name="DropDownPopupBorder"
											BorderThickness="1"
											BorderBrush="{StaticResource ControlOuterBorder}"
											Background="{StaticResource ControlBackground}"
											CornerRadius="0"
											Margin="0"
											MinWidth="3"
											MinHeight="3"
											Width="{TemplateBinding DropDownWidth}"
											Height="{TemplateBinding DropDownHeight}"
											MaxWidth="{TemplateBinding DropDownMaxWidth}"
											MaxHeight="{TemplateBinding DropDownMaxHeight}">
										<ContentPresenter x:Name="DropDownPopupContent"
														  Content="{TemplateBinding DropDownContent}"
														  ContentTemplate="{TemplateBinding DropDownContentTemplate}"
														  HorizontalAlignment="Stretch"
														  VerticalAlignment="Stretch"
														  DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}" />
									</Border>
								</Grid>
								
							
						</Popup>
						
						<!-- Focus -->
						<Border x:Name="CommonStatesWrapper" IsHitTestVisible="false">
							<Border x:Name="FocusVisual"
									Visibility="Collapsed"
									Opacity="0"
									BorderThickness="1"
									CornerRadius="{TemplateBinding CornerRadius}"
									BorderBrush="{StaticResource ControlOuterBorder_Focused}"
									Background="{StaticResource ControlBackground_Focused}">
								<Border x:Name="FocusInnerVisual"
										BorderThickness="0"
										CornerRadius="{StaticResource ControlInnerBorder_CornerRadius}"
										BorderBrush="{StaticResource ControlInnerBorder_Focused}" />
							</Border>
						</Border>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Disabled}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ControlInnerBorder_Disabled}" />
                            <Setter TargetName="InnerBorder" Property="Background"  Value="{StaticResource ControlBackground_Disabled}" />
                        </Trigger>
						<Trigger Property="IsOpen" Value="True">
                            <Setter Value="1" Property="Opacity" TargetName="CheckedVisual"/>
                            <Setter Property="Canvas.ZIndex" TargetName="DropDownPart" Value="1" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ControlOuterBorder_MouseOver}" />
                            <Setter TargetName="InnerBorder" Property="Background"  Value="{StaticResource ControlBackground_MouseOver}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ControlInnerBorder_MouseOver}" />
                        </Trigger>
						<Trigger Property="DropDownButtonPosition" Value="Bottom" />
						<Trigger Property="DropDownButtonPosition"  Value="Left">
							<Setter TargetName="DropDownPart" Property="Grid.Column" Value="0" />
							<Setter TargetName="DropDownPart" Property="Grid.Row" Value="1" />
							<Setter TargetName="DropDownPart" Property="Margin" Value="0,0,-1,0" />
						</Trigger>
						<Trigger Property="DropDownButtonPosition"  Value="Top">
							<Setter TargetName="DropDownPart" Property="Grid.Column" Value="1" />
							<Setter TargetName="DropDownPart" Property="Grid.Row" Value="0" />
							<Setter TargetName="DropDownPart" Property="Margin" Value="0,0,0,-1" />
						</Trigger>
						<Trigger Property="DropDownButtonPosition" Value="Right">
							<Setter TargetName="DropDownPart" Property="Grid.Column" Value="2" />
							<Setter TargetName="DropDownPart" Property="Grid.Row" Value="1" />
							<Setter TargetName="DropDownPart" Property="Margin" Value="-1,0,0,0" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsToggle" Value="True" />
								<Condition Property="IsChecked"  Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="ButtonPart" Property="Background" Value="Red" />
						</MultiTrigger>
						<Trigger Property="IsButtonPartVisible" Value="False">
							<Setter TargetName="DropDownPart" Property="Grid.Column" Value="0" />
							<Setter TargetName="DropDownPart" Property="Grid.ColumnSpan" Value="3" />
							<Setter TargetName="DropDownPart" Property="IsTabStop" Value="True" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
							<Setter TargetName="FocusVisual" Property="Opacity" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	

</ResourceDictionary>
