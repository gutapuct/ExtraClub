<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		
                            xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                            xmlns:sys="clr-namespace:System;assembly=mscorlib"
							
							xmlns:external="clr-namespace:Telerik.Windows.Controls.External"
							xmlns:telerikInput="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Input,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
							xmlns:calendar="clr-namespace:Telerik.Windows.Controls.Calendar;assembly=Telerik.Windows.Controls.Input,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
							xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
							xmlns:telerikChromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
							xmlns:primitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
							xmlns:telerikMaskedTextBox="clr-namespace:Telerik.Windows.Controls.MaskedTextBox;assembly=Telerik.Windows.Controls.Input,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"
                            xmlns:telerikMaskedInput="clr-namespace:Telerik.Windows.Controls.MaskedInput;assembly=Telerik.Windows.Controls.Input,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"                           
                            xmlns:telerikRating="clr-namespace:Telerik.Windows.Controls.Rating;assembly=Telerik.Windows.Controls.Input,Version=2011.2.0712.35,Culture=neutral,PublicKeyToken=5803cfa389c90ce7"


>

    <external:SummerThemeExternal x:Key="Theme" />
<Thickness x:Key="CalendarButtonButtonChromeMargin">0 0 1 1</Thickness>
<CornerRadius x:Key="SplitButton_SpanCornerRadius">2</CornerRadius>
<Thickness x:Key="CalendarButtonTodayVisualMargin">0 0 1 1</Thickness>
    <SolidColorBrush x:Key="ControlOuterBorder_Pressed" Color="{DynamicResource ControlBorderColor}" />
    <SolidColorBrush x:Key="CalendarOuterBorder" Color="{DynamicResource ControlBorderColor}" />
    <SolidColorBrush x:Key="CalendarViewBackground" Color="White" />
<Thickness x:Key="CalendarViewBorderThickness">0 0 0 1</Thickness>
<Thickness x:Key="CalendarViewHeaderPadding">1</Thickness>
<Thickness x:Key="CalendarViewMargin">0 -1 0 1</Thickness>
<Thickness x:Key="CalendarViewHeaderMargin">0 0 -1 0</Thickness>
<SolidColorBrush x:Key="CalendarSubHeaderBackground" Color="#FFFFFFFF" />
<SolidColorBrush x:Key="CalendarSubHeaderOuterBorder" Color="#FFFFFFFF" />
<SolidColorBrush x:Key="CalendarSubHeaderInnerBorder" Color="#FFFFFFFF" />
<Thickness x:Key="CalendarItemsMargin">1 1 1 1</Thickness>
<sys:Int32 x:Key="CalendarWeekHeaderVerticalOuterBorderZIndex">0</sys:Int32>
<SolidColorBrush x:Key="CalendarWeekHeaderVerticalOuterBorder" Color="Transparent" />
<Thickness x:Key="CalendarWeekHeaderVerticalOuterBorderThickness">0</Thickness>
<Thickness x:Key="CalendarWeekHeaderVerticalOuterBorderMargin">0</Thickness>
<sys:Int32 x:Key="CalendarWeekHeaderHorizontalOuterBorderZIndex">0</sys:Int32>
<SolidColorBrush x:Key="CalendarWeekHeaderHorizontalOuterBorder" Color="Transparent"  />
<Thickness x:Key="CalendarWeekHeaderHorizontalOuterBorderThickness">0</Thickness>
<Thickness x:Key="CalendarWeekHeaderHorizontalOuterBorderMargin">0</Thickness>
<sys:Int32 x:Key="CalendarWeekHeaderVerticalInnerBorderZIndex">0</sys:Int32>
<SolidColorBrush x:Key="CalendarWeekHeaderVerticalInnerBorder" Color="Transparent" />
<Thickness x:Key="CalendarWeekHeaderVerticalInnerBorderThickness">0</Thickness>
<Thickness x:Key="CalendarWeekHeaderVerticalInnerBorderMargin">0</Thickness>
<sys:Int32 x:Key="CalendarWeekHeaderHorizontalInnerBorderZIndex">0</sys:Int32>
<SolidColorBrush x:Key="CalendarWeekHeaderHorizontalInnerBorder" Color="Transparent" />
<Thickness x:Key="CalendarWeekHeaderHorizontalInnerBorderThickness">0</Thickness>
<Thickness x:Key="CalendarWeekHeaderHorizontalInnerBorderMargin">0</Thickness>
<sys:Int32 x:Key="CalendarWeekHeaderVerticalBackgroundZIndex">0</sys:Int32>
    <SolidColorBrush x:Key="CalendarWeekHeaderVerticalBackground" Color="{DynamicResource ButtonTopColor}" />
<Thickness x:Key="CalendarWeekHeaderVerticalBackgroundMargin">-1 0 0 0</Thickness>
<sys:Int32 x:Key="CalendarWeekHeaderHorizontalBackgroundZIndex">0</sys:Int32>
    <SolidColorBrush x:Key="CalendarWeekHeaderHorizontalBackground" Color="{DynamicResource ButtonTopColor}" />
<Thickness x:Key="CalendarWeekHeaderHorizontalBackgroundMargin">-1 0 0 0</Thickness>
<SolidColorBrush x:Key="HeaderButtonOuterBorder_Normal" Color="Transparent" />
<SolidColorBrush x:Key="HeaderButtonBackground_Normal" Color="Transparent" />
<SolidColorBrush x:Key="HeaderButtonInnerBorder_Normal" Color="Transparent" />
    <SolidColorBrush x:Key="HeaderButtonOuterBorder_MouseOver" Color="{DynamicResource ControlBorderColor}" />
<SolidColorBrush x:Key="HeaderButtonInnerBorder_MouseOver" Color="Transparent" />
<LinearGradientBrush x:Key="HeaderButtonBackground_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ButtonTopMouseOverColor}"/>
        <GradientStop Color="{DynamicResource ButtonBottomMouseOverColor}" Offset="1"/>
	</LinearGradientBrush>


    <SolidColorBrush x:Key="HeaderButtonOuterBorder_Pressed" Color="{DynamicResource ControlBorderColor}" />
<SolidColorBrush x:Key="HeaderButtonInnerBorder_Pressed" Color="Transparent" />
    <SolidColorBrush x:Key="HeaderButtonBackground_Pressed" Color="{DynamicResource ButtonBottomPressedColor}" />
<SolidColorBrush x:Key="HeaderButtonIconBackground_Normal" Color="Transparent" />
<SolidColorBrush x:Key="HeaderButtonIconForeground_Normal" Color="White" />
<SolidColorBrush x:Key="HeaderButtonIconBackground_MouseOver" Color="Transparent" />
<SolidColorBrush x:Key="HeaderButtonIconForeground_MouseOver" Color="White" />
<SolidColorBrush x:Key="HeaderButtonIconBackground_Pressed" Color="Transparent" />
<SolidColorBrush x:Key="HeaderButtonIconForeground_Pressed" Color="White" />
<SolidColorBrush x:Key="HeaderButtonIconBackground_Disabled" Color="Transparent" />
<SolidColorBrush x:Key="HeaderButtonIconForeground_Disabled" Color="White" />
<FontWeight x:Key="HeaderTextFontWeight">Normal</FontWeight>
<SolidColorBrush x:Key="HeaderTextBackground" Color="Transparent" />
<SolidColorBrush x:Key="HeaderTextForeground" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="PickerForeground_Normal" Color="{DynamicResource ControlBorderColor}" />
<SolidColorBrush x:Key="PanelBackground" Color="#FFFFFFFF" />
    
<Thickness x:Key="CalendarHeaderPadding">1</Thickness>
<Thickness x:Key="CalendarTransitionPanelMargin">0 1 0 -1</Thickness>
<CornerRadius x:Key="CalendarOuterBorderCornerRadius">3</CornerRadius>
<SolidColorBrush x:Key="CalendarInnerBorder" Color="Transparent" />
<CornerRadius x:Key="CalendarInnerBorderCornerRadius">2</CornerRadius>
<Thickness x:Key="CalendarHeaderBorderThickness">1 1 1 0</Thickness>
<CornerRadius x:Key="CalendarHeaderOuterCornerRadius">3 3 0 0</CornerRadius>
    <SolidColorBrush x:Key="HeaderOuterBorder" Color="{DynamicResource ControlBorderColor}" />
<LinearGradientBrush x:Key="HeaderBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ButtonBottomColor}"/>
        <GradientStop Color="{DynamicResource ButtonBottomColor}" Offset="1"/>
	</LinearGradientBrush>
<SolidColorBrush x:Key="HeaderInnerBorder" Color="Transparent" />
<CornerRadius x:Key="CalendarHeaderInnerCornerRadius">2 2 0 0</CornerRadius>
<Thickness x:Key="ClockItemPadding">5 2 5 3</Thickness>
<Thickness x:Key="ClockButtonChromeMargin">0 0 1 1</Thickness>
    <SolidColorBrush x:Key="PanelBorderBrush" Color="{DynamicResource ControlBorderColor}" />
<LinearGradientBrush x:Key="ClockBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCFCFA" />
        <GradientStop Color="#FFFAFAF4" Offset="1" />
    </LinearGradientBrush>
    
<CornerRadius x:Key="ClockOuterBorderCornerRadius">3</CornerRadius>
<CornerRadius x:Key="ClockInnerBorderCornerRadius">2</CornerRadius>
<SolidColorBrush x:Key="ClockInnerBorderBrush" Color="Transparent" />
<Thickness x:Key="ClockItemsMargin">2 1 1 1</Thickness>
<LinearGradientBrush x:Key="TooltipBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCFCFC" Offset="0"/>
        <GradientStop Color="#FFD5D5D5" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Tooltip_OuterBorderBrush" Color="{DynamicResource ControlBorderColor}" />
<Thickness x:Key="Tooltip_OuterBorderThickness" >1</Thickness>
<SolidColorBrush x:Key="TooltipInnerBorderBrush" Color="Transparent" />
    <SolidColorBrush x:Key="TooltipForeground" Color="{DynamicResource ControlBorderColor}" />
<SolidColorBrush x:Key="PickerBackground_Normal" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ControlOuterBorder_Normal" Color="{DynamicResource ControlBorderColor}" />
    <SolidColorBrush x:Key="ControlOuterBorder_MouseOver" Color="{DynamicResource ControlBorderColor}" />
    <SolidColorBrush x:Key="ControlOuterBorder_Focused" Color="{DynamicResource ControlBorderColor}" />
<SolidColorBrush x:Key="ControlInnerBorder_Focused" Color="Transparent" />
<CornerRadius x:Key="SplitButton_SpanInnerCornerRadius">1</CornerRadius>
<CornerRadius x:Key="SplitButton_RightPartCornerRadius">0 2 2 0</CornerRadius>
<ControlTemplate x:Key="CalendarIcon" TargetType="ContentControl">
		
		
		<Image Margin="3.1 3.1 2.9 2.9" Stretch="None" Source="/Telerik.Windows.Controls.Input;component/Themes/CalendarIcon-Blue.png" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased" />
		
	</ControlTemplate>
<SolidColorBrush x:Key="ButtonIconBackground_Normal" Color="Transparent" />
    <SolidColorBrush x:Key="ButtonIconForeground_Normal" Color="{DynamicResource ControlBorderColor}" />
    <SolidColorBrush x:Key="ButtonIconForeground_MouseOver" Color="{DynamicResource ControlBorderColor}" />
<SolidColorBrush x:Key="ButtonIconBackground_MouseOver" Color="Transparent" />
    <SolidColorBrush x:Key="ButtonIconForeground_Pressed" Color="{DynamicResource ControlBorderColor}" />
<SolidColorBrush x:Key="ButtonIconBackground_Pressed" Color="Transparent" />
<SolidColorBrush x:Key="ControlOuterBorder_Disabled" Color="#FFC9C9C9" />
<SolidColorBrush x:Key="PickerForeground_Disabled" Color="#FF8D8D8D" />
    <SolidColorBrush x:Key="ButtonIconForeground_Disabled" Color="{DynamicResource ControlBorderColor}" />
<SolidColorBrush x:Key="ButtonIconBackground_Disabled" Color="Transparent" />

	

    <!-- Calendar and DatePicker -->
    <telerik:InvertedBooleanToVisibilityConverter
            x:Key="InvertedBooleanToVisibilityConverterInstance" />

    <!-- CalendarButtonStyle -->
    <Style x:Key="CalendarButtonStyle" TargetType="calendar:CalendarButton">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarButton">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderThickness}" />
                        <telerikChromes:ButtonChrome x:Name="SelectionChrome"
                                telerik:StyleManager.Theme="{StaticResource Theme}"
                                Margin="{StaticResource CalendarButtonButtonChromeMargin}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                RenderNormal="False" RenderFocused="{TemplateBinding IsFocused}"
                                RenderSelected="{TemplateBinding IsSelected}"
                                RenderHighlighted="{TemplateBinding IsMouseOver}" />
                        <Border x:Name="TodayVisual"
                                Margin="{StaticResource CalendarButtonTodayVisualMargin}"
                                Visibility="Collapsed" BorderThickness="1" CornerRadius="2"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}" />
                        <ContentPresenter x:Name="Content" Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFromCurrentView" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="TodayDate">
                            <Setter TargetName="TodayVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="WeekNumber">
                            <Setter TargetName="SelectionChrome" Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="WeekName">
                            <Setter TargetName="SelectionChrome" Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- calendar:CalendarButton -->
    <Style BasedOn="{StaticResource CalendarButtonStyle}" TargetType="calendar:CalendarButton" x:Key="{telerik:ThemeResourceKey ThemeType=
        external:SummerThemeExternal , ElementType=calendar:CalendarButton}"
         >
    </Style>

    <!--CalendarViewStyle-->
    <Style TargetType="calendar:CalendarView" x:Key="CalendarViewStyle">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}" />
        <Setter Property="Background" Value="{StaticResource CalendarViewBackground}" />
        <Setter Property="BorderThickness" Value="{StaticResource CalendarViewBorderThickness}" />
        <Setter Property="Padding" Value="{StaticResource CalendarViewHeaderPadding}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarView">
                    <Grid Margin="{StaticResource CalendarViewMargin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border x:Name="BackgroundVisual" Grid.RowSpan="2"
                                Background="{TemplateBinding Background}" />

                        <Border x:Name="Header" Visibility="{TemplateBinding HeaderVisibility}"
                                Margin="{StaticResource CalendarViewHeaderMargin}"
                                Background="{StaticResource CalendarSubHeaderBackground}"
                                BorderBrush="{StaticResource CalendarSubHeaderOuterBorder}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border BorderThickness="0"
                                    BorderBrush="{StaticResource CalendarSubHeaderInnerBorder}">
                                <ContentPresenter Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Border>

                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource CalendarItemsMargin}" />

                        <Border x:Name="BorderBrush" Grid.RowSpan="2"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />

                        <Rectangle x:Name="MinDesiredSize" Grid.Row="1" Width="240" Height="155" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0" />
    </Style>

    <!--MonthViewStyle-->
    <Style x:Key="MonthViewStyle" TargetType="calendar:CalendarView">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}" />
        <Setter Property="Background" Value="{StaticResource CalendarViewBackground}" />
        <Setter Property="BorderThickness" Value="{StaticResource CalendarViewBorderThickness}" />
        <Setter Property="Padding" Value="{StaticResource CalendarViewHeaderPadding}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarView">
                    <Grid Margin="{StaticResource CalendarViewMargin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border x:Name="BackgroundVisual" Grid.RowSpan="2"
                                Background="{TemplateBinding Background}" />

                        <Border x:Name="Header" Visibility="{TemplateBinding HeaderVisibility}"
                                Margin="{StaticResource CalendarViewHeaderMargin}"
                                Background="{StaticResource CalendarSubHeaderBackground}"
                                BorderBrush="{StaticResource CalendarSubHeaderOuterBorder}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border BorderThickness="0"
                                    BorderBrush="{StaticResource CalendarSubHeaderInnerBorder}">
                                <ContentPresenter Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Border>

                        <Grid x:Name="WeekHeaders" Grid.Row="1"
                                DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="6*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="7*" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="VerticalOuterBorder" Grid.RowSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalOuterBorderZIndex}"
                                    BorderBrush="{StaticResource CalendarWeekHeaderVerticalOuterBorder}"
                                    BorderThickness="{StaticResource CalendarWeekHeaderVerticalOuterBorderThickness}"
                                    Margin="{StaticResource CalendarWeekHeaderVerticalOuterBorderMargin}"
                                    Visibility="{Binding Path=HideColumn, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />
                            <Border x:Name="HorizontalOuterBorder" Grid.ColumnSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalOuterBorderZIndex}"
                                    BorderBrush="{StaticResource CalendarWeekHeaderHorizontalOuterBorder}"
                                    BorderThickness="{StaticResource CalendarWeekHeaderHorizontalOuterBorderThickness}"
                                    Margin="{StaticResource CalendarWeekHeaderHorizontalOuterBorderMargin}"
                                    Visibility="{Binding Path=HideRow, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />
                            <Border x:Name="VerticalInnerBorder" Grid.RowSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalInnerBorderZIndex}"
                                    BorderBrush="{StaticResource CalendarWeekHeaderVerticalInnerBorder}"
                                    BorderThickness="0"
                                    Margin="{StaticResource CalendarWeekHeaderVerticalInnerBorderMargin}"
                                    Visibility="{Binding Path=HideColumn, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />
                            <Border x:Name="HorizontalInnerBorder" Grid.ColumnSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalInnerBorderZIndex}"
                                    BorderBrush="{StaticResource CalendarWeekHeaderHorizontalInnerBorder}"
                                    BorderThickness="0"
                                    Margin="{StaticResource CalendarWeekHeaderHorizontalInnerBorderMargin}"
                                    Visibility="{Binding Path=HideRow, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />
                            <Rectangle x:Name="VerticalBackground" Grid.RowSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalBackgroundZIndex}"
                                    Fill="{StaticResource CalendarWeekHeaderVerticalBackground}"
                                    Margin="{StaticResource CalendarWeekHeaderVerticalBackgroundMargin}"
                                    Visibility="{Binding Path=HideColumn, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />
                            <Rectangle x:Name="HorizontalBackground" Grid.ColumnSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalBackgroundZIndex}"
                                    Fill="{StaticResource CalendarWeekHeaderHorizontalBackground}"
                                    Margin="{StaticResource CalendarWeekHeaderHorizontalBackgroundMargin}"
                                    Visibility="{Binding Path=HideRow, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />

                        </Grid>

                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource CalendarItemsMargin}" />

                        <Border x:Name="BorderBrush" Grid.RowSpan="2"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />

                        <Rectangle x:Name="MinDesiredSize" Grid.Row="1" Width="240" Height="155" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0" />
    </Style>

    <!--calendar:CalendarView-->
    <Style TargetType="calendar:CalendarView" BasedOn="{StaticResource MonthViewStyle}" x:Key="{telerik:ThemeResourceKey ThemeType=
        external:SummerThemeExternal , ElementType=calendar:CalendarView}"
         >
    </Style>

    <!-- HeaderButtonChrome -->
    <Style x:Key="HeaderButtonChrome" TargetType="telerikChromes:ButtonChrome">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource HeaderButtonOuterBorder_Normal}" />
        <Setter Property="Background" Value="{StaticResource HeaderButtonBackground_Normal}" />
        <Setter Property="CornerRadius" Value="{StaticResource SplitButton_SpanCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikChromes:ButtonChrome">
                    <Grid>
                        
                        <Border x:Name="OuterBorder" CornerRadius="{TemplateBinding CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="InnerBorder"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderThickness="0"
                                    BorderBrush="{StaticResource HeaderButtonInnerBorder_Normal}" />
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="RenderMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush"
                                    Value="{StaticResource HeaderButtonOuterBorder_MouseOver}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush"
                                    Value="{StaticResource HeaderButtonInnerBorder_MouseOver}" />
                            <Setter TargetName="OuterBorder" Property="Background"
                                    Value="{StaticResource HeaderButtonBackground_MouseOver}" />
                        </Trigger>
                        <Trigger Property="RenderPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush"
                                    Value="{StaticResource HeaderButtonOuterBorder_Pressed}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush"
                                    Value="{StaticResource HeaderButtonInnerBorder_Pressed}" />
                            <Setter TargetName="OuterBorder" Property="Background"
                                    Value="{StaticResource HeaderButtonBackground_Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MoveLeftButtonStyle-->
    <Style x:Key="MoveLeftButtonStyle" TargetType="RepeatButton">
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
                        
                        <telerikChromes:ButtonChrome Style="{StaticResource HeaderButtonChrome}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                RenderPressed="{TemplateBinding IsPressed}"
                                RenderFocused="{TemplateBinding IsFocused}" />
                        <Path x:Name="BackgroundIcon"
                                Fill="{StaticResource HeaderButtonIconBackground_Normal}"
                                Margin="0 2 0 0" Width="4" Height="7"
                                Data="M4,0 L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0 z" />
                        <Path x:Name="ForegroundIcon"
                                Fill="{StaticResource HeaderButtonIconForeground_Normal}"
                                Margin="0 1 0 1" Width="4" Height="7"
                                Data="M4,0 L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0 z" />
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconBackground_MouseOver}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconForeground_MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconBackground_Pressed}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconForeground_Pressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconBackground_Disabled}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconForeground_Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MoveRightButtonStyle-->
    <Style x:Key="MoveRightButtonStyle" TargetType="RepeatButton">
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
                        
                        <telerikChromes:ButtonChrome Style="{StaticResource HeaderButtonChrome}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                RenderPressed="{TemplateBinding IsPressed}"
                                RenderFocused="{TemplateBinding IsFocused}" />
                        <Path x:Name="BackgroundIcon"
                                Fill="{StaticResource HeaderButtonIconBackground_Normal}"
                                Margin="0 2 0 0" Width="4" Height="7"
                                Data="M0,0 L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0 z" />
                        <Path x:Name="ForegroundIcon"
                                Fill="{StaticResource HeaderButtonIconForeground_Normal}"
                                Margin="0 1 0 1" Width="4" Height="7"
                                Data="M0,0 L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0 z" />
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconBackground_MouseOver}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconForeground_MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconBackground_Pressed}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconForeground_Pressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconBackground_Disabled}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill"
                                    Value="{StaticResource HeaderButtonIconForeground_Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CalendarHeaderButton-->
    <Style x:Key="CalendarHeaderButton" TargetType="Button">
        <Setter Property="Height" Value="22" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot">
                        
                        <TextBlock x:Name="BackgroundText" Text="{TemplateBinding Content}"
                                Margin="0 2 0 0" HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="{StaticResource HeaderTextFontWeight}"
                                Foreground="{StaticResource HeaderTextBackground}" />
                        <TextBlock x:Name="ForegroundText" Text="{TemplateBinding Content}"
                                Margin="0 1 0 1" HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="{StaticResource HeaderTextFontWeight}"
                                Foreground="{StaticResource HeaderTextForeground}" />
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundText" Property="TextDecorations"
                                    Value="Underline" />
                            <Setter TargetName="ForegroundText" Property="TextDecorations"
                                    Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundText" Property="TextDecorations"
                                    Value="Underline" />
                            <Setter TargetName="ForegroundText" Property="TextDecorations"
                                    Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BackgroundText" Property="TextDecorations"
                                    Value="Underline" />
                            <Setter TargetName="ForegroundText" Property="TextDecorations"
                                    Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="0.75" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--telerikInput:RadCalendar-->
    <Style TargetType="telerikInput:RadCalendar" 
        
         x:Key="{telerik:ThemeResourceKey ThemeType=
        external:SummerThemeExternal ,  ElementType=telerikInput:RadCalendar}"
         >
        <Setter Property="Columns" Value="1" />
        <Setter Property="Rows" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}" />
        <Setter Property="MonthViewStyle" Value="{StaticResource MonthViewStyle}" />
        <Setter Property="YearViewStyle" Value="{StaticResource CalendarViewStyle}" />
        <Setter Property="DecadeViewStyle" Value="{StaticResource CalendarViewStyle}" />
        <Setter Property="CenturyViewStyle" Value="{StaticResource CalendarViewStyle}" />
        <Setter Property="DayButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="MonthButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="YearButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="DecadeButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="Background" Value="{StaticResource PanelBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="{StaticResource CalendarHeaderPadding}" />
        <Setter Property="ViewsHeaderVisibility" Value="Collapsed" />
        <Setter Property="IsTabStop" Value="False" />
        
        <Setter Property="SnapsToDevicePixels" Value="True" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadCalendar">
                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border x:Name="Background" Grid.RowSpan="2"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />

                        <calendar:TransitionPanel x:Name="TransitionPanel" Grid.Row="1"
                                ClipToBounds="True"
                                Margin="{StaticResource CalendarTransitionPanelMargin}">
                            <primitives:RadUniformGrid x:Name="MonthViews" Margin="1 1 0 0"
                                    Rows="{TemplateBinding Rows}"
                                    Columns="{TemplateBinding Columns}" />
                            <primitives:RadUniformGrid x:Name="YearViews" Margin="1 1 0 0"
                                    Rows="{TemplateBinding Rows}"
                                    Columns="{TemplateBinding Columns}" Visibility="Collapsed" />
                            <primitives:RadUniformGrid x:Name="DecadeViews" Margin="1 1 0 0"
                                    Rows="{TemplateBinding Rows}"
                                    Columns="{TemplateBinding Columns}" Visibility="Collapsed" />
                            <primitives:RadUniformGrid x:Name="CenturyViews" Margin="1 1 0 0"
                                    Rows="{TemplateBinding Rows}"
                                    Columns="{TemplateBinding Columns}" Visibility="Collapsed" />
                        </calendar:TransitionPanel>

                        <Border x:Name="OuterBorder" Grid.RowSpan="2"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource CalendarOuterBorderCornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Border x:Name="InnerBorder"
                                    BorderBrush="{StaticResource CalendarInnerBorder}"
                                    CornerRadius="{StaticResource CalendarInnerBorderCornerRadius}"
                                    BorderThickness="0" />
                        </Border>

                        <Border x:Name="Navigation" Margin="0 0 0 -1" Canvas.ZIndex="2"
                                Visibility="{TemplateBinding HeaderVisibility}"
                                BorderThickness="{StaticResource CalendarHeaderBorderThickness}"
                                CornerRadius="{StaticResource CalendarHeaderOuterCornerRadius}"
                                BorderBrush="{StaticResource HeaderOuterBorder}"
                                Background="{StaticResource HeaderBackground}">
                            <Border BorderThickness="0"
                                    BorderBrush="{StaticResource HeaderInnerBorder}"
                                    CornerRadius="{StaticResource CalendarHeaderInnerCornerRadius}"
                                    Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <RepeatButton x:Name="MoveLeft" Grid.Column="0"
                                            Style="{StaticResource MoveLeftButtonStyle}" />
                                    <Button x:Name="Header" Grid.Column="1"
                                            Style="{StaticResource CalendarHeaderButton}" />
                                    <RepeatButton x:Name="MoveRight" Grid.Column="2"
                                            Style="{StaticResource MoveRightButtonStyle}" />

                                </Grid>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MonthViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" FirstColumn="1"
                            VerticalAlignment="Stretch" Rows="7" Columns="8" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="YearViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True"
                            VerticalAlignment="Stretch" Rows="3" Columns="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DecadeViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True"
                            VerticalAlignment="Stretch" Rows="3" Columns="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CenturyViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True"
                            VerticalAlignment="Stretch" Rows="3" Columns="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    

    <!-- Clock and TimePicker -->

    <Style TargetType="telerikInput:RadClockItem" x:Key="{telerik:ThemeResourceKey ThemeType=
        external:SummerThemeExternal , ElementType=telerikInput:RadClockItem}"
         >
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{StaticResource ClockItemPadding}" />
        
        <Setter Property="SnapsToDevicePixels" Value="True" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadClockItem">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        

                        <telerikChromes:ButtonChrome x:Name="SelectionChrome"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                Margin="{StaticResource ClockButtonChromeMargin}"
                                RenderNormal="False"
                                telerik:StyleManager.Theme="{StaticResource Theme}" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}"
                             />
                            <ContentPresenter x:Name="Content"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Margin="{TemplateBinding Padding}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--telerikInput:RadClock-->
    <Style TargetType="telerikInput:RadClock"
           
         x:Key="{telerik:ThemeResourceKey ThemeType=
        external:SummerThemeExternal , ElementType=telerikInput:RadClock}"
         >

		<Setter Property="telerik:LocalizationManager.ResourceKey" Value="Clock" />
		
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ClockBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="{StaticResource CalendarHeaderPadding}" />
        <Setter Property="IsTabStop" Value="False" />

        <Setter Property="StartTime" Value="0:0:0" />
        <Setter Property="EndTime" Value="23:59:0" />
        

        
        <Setter Property="SnapsToDevicePixels" Value="True" />
        

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <primitives:RadUniformGrid x:Name="uniformGrid" Columns="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock x:Name="ContentText" Text="{Binding}" TextAlignment="Center"
                            HorizontalAlignment="Center" VerticalAlignment="Center" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadClock">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border x:Name="BackgroundVisual" Grid.RowSpan="2"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{StaticResource ClockOuterBorderCornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Border CornerRadius="{StaticResource ClockInnerBorderCornerRadius}"
                                    BorderThickness="0"
                                    BorderBrush="{StaticResource ClockInnerBorderBrush}" />
                        </Border>

                        <Border x:Name="Header"
                                BorderThickness="{StaticResource CalendarHeaderBorderThickness}"
                                CornerRadius="{StaticResource CalendarHeaderOuterCornerRadius}"
                                BorderBrush="{StaticResource HeaderOuterBorder}"
                                Background="{StaticResource HeaderBackground}" MinHeight="32">
                            <Border BorderThickness="0"
                                    BorderBrush="{StaticResource HeaderInnerBorder}"
                                    CornerRadius="{StaticResource CalendarHeaderInnerCornerRadius}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentControl Foreground="{StaticResource HeaderTextForeground}"
                                        IsTabStop="False"
                                        FontWeight="{StaticResource HeaderTextFontWeight}"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Border>

                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource ClockItemsMargin}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <DataTemplate x:Key="WatermarkTemplate">
		<TextBlock Opacity="0.5" Text="{Binding}" />
    </DataTemplate>

    <DataTemplate x:Key="TooltipTemplate">
        <Border CornerRadius="2" Background="{StaticResource TooltipBackground}"
                BorderBrush="{StaticResource Tooltip_OuterBorderBrush}"
                BorderThickness="{StaticResource Tooltip_OuterBorderThickness}" Margin="0 2">
            <Border CornerRadius="1" BorderBrush="{StaticResource TooltipInnerBorderBrush}"
                    BorderThickness="0">
                <ContentControl Foreground="{StaticResource TooltipForeground}" Margin="5 2"
                        Content="{Binding}" />
            </Border>
        </Border>
    </DataTemplate>

	<Style x:Key="CloseButtonStyle" TargetType="telerik:RadToggleButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadToggleButton">
					<Grid>
						<telerikChromes:ButtonChrome RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" telerik:StyleManager.Theme="{StaticResource Theme}" />
						<ContentPresenter Margin="{TemplateBinding Padding}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
		   
    <Style TargetType="telerikInput:RadDateTimePicker" x:Key="dateTimePickerStyle">
        
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        
        
        <Setter Property="TooltipTemplate" Value="{StaticResource TooltipTemplate}" />
        <Setter Property="Background" Value="{StaticResource PickerBackground_Normal}" />
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />

        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Padding" Value="4 2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="DateTimeWatermarkTemplate" Value="{StaticResource WatermarkTemplate}" />

        <Setter Property="IsTabStop" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadDateTimePicker">
                    <Grid>
                        

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="BackgroundVisual" Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" />

                        <Border x:Name="MouseOverVisual" Grid.ColumnSpan="2"
                                IsHitTestVisible="False"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}"
                                BorderThickness="{TemplateBinding BorderThickness}" Opacity="0"
                                Visibility="Collapsed"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" />

                        <telerik:RadWatermarkTextBox x:Name="PART_DateTimeInput" Grid.Column="0"
                                Text="{Binding DateTimeText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                CurrentText="{Binding CurrentDateTimeText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0"
                                MinHeight="0" Margin="{TemplateBinding BorderThickness}"
                                WatermarkContent=""
                                WatermarkTemplate="{TemplateBinding DateTimeWatermarkTemplate}"
                                TextAlignment="{TemplateBinding TextAlignment}" TabIndex="0"
                                SelectionOnFocus="SelectAll"
                                telerik:StyleManager.Theme="{StaticResource Theme}" />

                        <Border x:Name="FocusVisual" Visibility="Collapsed" Grid.ColumnSpan="2"
                                IsHitTestVisible="False"
                                BorderBrush="{StaticResource ControlOuterBorder_Focused}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border BorderBrush="{StaticResource ControlInnerBorder_Focused}"
                                    CornerRadius="{StaticResource SplitButton_SpanInnerCornerRadius}"
                                    BorderThickness="0" />
                        </Border>

                        <telerik:RadDropDownButton Grid.Column="1" TabIndex="1" Margin="-1 0 0 0"
                                Padding="0" DropDownIndicatorVisibility="Collapsed"
                                x:Name="PART_DropDownButton"
                                PopupPlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                CloseOnEnter="True" IsTabStop="False"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                telerikInput:DateTimePickerExtensions.FocusContentOnOpen="True"
                                telerik:StyleManager.Theme="{StaticResource Theme}"
                                
                            Focusable="False"
                             >

                            <telerik:RadDropDownButton.DropDownContent>
                                <Grid>
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition />
									</Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <telerikInput:RadCalendar x:Name="PART_Calendar"
											Grid.Column="0" Grid.Row="0"
                                            IsReadOnly="{TemplateBinding IsReadOnly}"
                                            DateSelectionMode="{TemplateBinding DateSelectionMode}"
                                            Culture="{TemplateBinding Culture}"
                                            SelectionMode="Single"
                                            Style="{TemplateBinding CalendarStyle}"
                                            DisplayDateStart="{Binding DisplayDateStart, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            DisplayDate="{Binding DisplayDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            DisplayDateEnd="{Binding DisplayDateEnd, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            SelectableDateStart="{Binding SelectableDateStart, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            SelectedDate="{Binding SelectedDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            SelectableDateEnd="{Binding SelectableDateEnd, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            telerik:StyleManager.Theme="{StaticResource Theme}"
                                         />

                                    <telerikInput:DateTimePickerClock x:Name="PART_Clock"
                                            Grid.Column="1" Grid.Row="0"
                                            ItemsSource="{TemplateBinding ClockItemsSource}"
                                            StartTime="{TemplateBinding StartTime}"
                                            EndTime="{TemplateBinding EndTime}"
                                            TimeInterval="{Binding TimeInterval, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsReadOnly="{TemplateBinding IsReadOnly}"
                                            Style="{TemplateBinding ClockStyle}"
                                            Culture="{TemplateBinding Culture}"
                                            SelectedTime="{Binding SelectedTime, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        telerik:StyleManager.Theme="{StaticResource Theme}"
                                         />
										
									<Border x:Name="CloseButtonContainer" Grid.ColumnSpan="2" Grid.Row="1" Background="{StaticResource PanelBackground}" BorderThickness="1 0 1 1" BorderBrush="{StaticResource CalendarOuterBorder}">
										<Border BorderThickness="0" BorderBrush="{StaticResource CalendarInnerBorder}">
											<telerik:RadToggleButton x:Name="PART_Close"
													IsBackgroundVisible="False"
													HorizontalAlignment="Right" Padding="8 3" Margin="2"
													IsThreeState="False" Content="Close"
													Style="{StaticResource CloseButtonStyle}"
													IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
										</Border>
									</Border>
								</Grid>
                            </telerik:RadDropDownButton.DropDownContent>

                            <telerik:RadDropDownButton.Template>
                                <ControlTemplate TargetType="telerik:RadDropDownButton">
                                    <Grid>
                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

										
										<Popup x:Name="DropDownPopup" 
							AllowsTransparency="True" StaysOpen="False" Focusable="false" Placement="Bottom"
							IsOpen="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
											

											
												
											
                                            <ContentPresenter x:Name="DropDownPopupContent"
                                                    Content="{TemplateBinding DropDownContent}"
                                                    ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}" />
										
										</Popup>
										
										
									</Grid>
                                </ControlTemplate>
                            </telerik:RadDropDownButton.Template>
                            <Grid>
                                <telerikChromes:ButtonChrome x:Name="ButtonChrome"
                                        telerik:StyleManager.Theme="{StaticResource Theme}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}"
                                        CornerRadius="{StaticResource SplitButton_RightPartCornerRadius}"
                                        
										RenderEnabled="{TemplateBinding IsEnabled}"
										RenderActive="{TemplateBinding IsMouseOver}"
										RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
										 />

                                    <ContentControl x:Name="DropDownIcon" IsTabStop="False"
                                            Template="{StaticResource CalendarIcon}"
                                            Background="{StaticResource ButtonIconBackground_Normal}"
                                            Foreground="{StaticResource ButtonIconForeground_Normal}" />
                            </Grid>

                        </telerik:RadDropDownButton>

                        

						
						<Popup x:Name="PART_InputPopup"
                                telerik:PopupExtensions.IsOpen="{Binding IsTooltipOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                telerik:PopupExtensions.Placement="Top"
                                telerik:PopupExtensions.PlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                telerik:PopupExtensions.Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
							       StaysOpen="False"
                                AllowsTransparency="True">
							

							
								
                            <ContentPresenter Content="{TemplateBinding TooltipContent}"
                                    ContentTemplate="{TemplateBinding TooltipTemplate}" />

								
						</Popup>
						
						
									
					</Grid>

                    
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="MouseOverVisual"
                                                Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="MouseOverVisual"
                                                Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="MouseOverVisual"
                                                Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.150" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="MouseOverVisual"
                                                Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter TargetName="DropDownIcon" Property="Foreground"
                                    Value="{StaticResource ButtonIconForeground_MouseOver}" />
                            <Setter TargetName="DropDownIcon" Property="Background"
                                    Value="{StaticResource ButtonIconBackground_MouseOver}" />
                        </MultiTrigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="DropDownIcon" Property="Foreground"
                                    Value="{StaticResource ButtonIconForeground_Pressed}" />
                            <Setter TargetName="DropDownIcon" Property="Background"
                                    Value="{StaticResource ButtonIconBackground_Pressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="BackgroundVisual"
                                    Value="{StaticResource ControlOuterBorder_Disabled}" />
                            <Setter Property="Opacity" TargetName="MouseOverVisual" Value="0" />
                            <Setter Property="Visibility" TargetName="MouseOverVisual"
                                    Value="Collapsed" />
                            <Setter Property="Foreground" TargetName="PART_DateTimeInput"
                                    Value="{StaticResource PickerForeground_Disabled}" />
                            <Setter TargetName="DropDownIcon" Property="Foreground"
                                    Value="{StaticResource ButtonIconForeground_Disabled}" />
                            <Setter TargetName="DropDownIcon" Property="Background"
                                    Value="{StaticResource ButtonIconBackground_Disabled}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="InputMode" Value="DatePicker">
                            <Setter TargetName="PART_Clock" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="CloseButtonContainer" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="InputMode" Value="TimePicker">
                            <Setter TargetName="PART_Calendar" Property="Visibility"
                                    Value="Collapsed" />
							<Setter TargetName="CloseButtonContainer" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--telerikInput:RadDateTimePicker-->
    <Style TargetType="telerikInput:RadDateTimePicker"
            BasedOn="{StaticResource dateTimePickerStyle}" x:Key="{telerik:ThemeResourceKey ThemeType=
        external:SummerThemeExternal , ElementType=telerikInput:RadDateTimePicker}"
         />

        
</ResourceDictionary>
