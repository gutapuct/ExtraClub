//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace TonusClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class SalarySchemeCoefficient : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual System.Guid CompanyId
        {
            get {return _companyId;}
            set 
    		{ 
    			if(_companyId != value)
    			{
    				_companyId = value; 
    				
    				
    
    				OnPropertyChanged("CompanyId");
    			}
    		}
        }
        private System.Guid _companyId;
    
    
    	[DataMember]
        public virtual System.Guid SalarySchemeId
        {
            get { return _salarySchemeId; }
            set
            {
                if (_salarySchemeId != value)
                {
                    if (SalaryScheme != null && SalaryScheme.Id != value)
                    {
                        SalaryScheme = null;
                    }
                    _salarySchemeId = value;
    
    				OnPropertyChanged("SalarySchemeId");
                }
            }
        }
        private System.Guid _salarySchemeId;
    
    
    	[DataMember]
        public virtual int CoeffTypeId
        {
            get {return _coeffTypeId;}
            set 
    		{ 
    			if(_coeffTypeId != value)
    			{
    				_coeffTypeId = value; 
    				
    				
    
    				OnPropertyChanged("CoeffTypeId");
    			}
    		}
        }
        private int _coeffTypeId;
    
    
    	[DataMember]
        public virtual Nullable<decimal> Money1
        {
            get {return _money1;}
            set 
    		{ 
    			if(_money1 != value)
    			{
    				_money1 = value; 
    				
    				
    
    				OnPropertyChanged("Money1");
    			}
    		}
        }
        private Nullable<decimal> _money1;
    
    
    	[DataMember]
        public virtual Nullable<System.Guid> Guid1
        {
            get {return _guid1;}
            set 
    		{ 
    			if(_guid1 != value)
    			{
    				_guid1 = value; 
    				
    				
    
    				OnPropertyChanged("Guid1");
    			}
    		}
        }
        private Nullable<System.Guid> _guid1;
    
    
    	[DataMember]
        public virtual Nullable<int> Int1
        {
            get {return _int1;}
            set 
    		{ 
    			if(_int1 != value)
    			{
    				_int1 = value; 
    				
    				
    
    				OnPropertyChanged("Int1");
    			}
    		}
        }
        private Nullable<int> _int1;
    
    
    	[DataMember]
        public virtual Nullable<int> Int2
        {
            get {return _int2;}
            set 
    		{ 
    			if(_int2 != value)
    			{
    				_int2 = value; 
    				
    				
    
    				OnPropertyChanged("Int2");
    			}
    		}
        }
        private Nullable<int> _int2;
    
    
    	[DataMember]
        public virtual Nullable<System.TimeSpan> TimeSpan1
        {
            get {return _timeSpan1;}
            set 
    		{ 
    			if(_timeSpan1 != value)
    			{
    				_timeSpan1 = value; 
    				
    				
    
    				OnPropertyChanged("TimeSpan1");
    			}
    		}
        }
        private Nullable<System.TimeSpan> _timeSpan1;
    
    
    	[DataMember]
        public virtual Nullable<System.TimeSpan> TimeSpan2
        {
            get {return _timeSpan2;}
            set 
    		{ 
    			if(_timeSpan2 != value)
    			{
    				_timeSpan2 = value; 
    				
    				
    
    				OnPropertyChanged("TimeSpan2");
    			}
    		}
        }
        private Nullable<System.TimeSpan> _timeSpan2;
    
    

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<SalaryRateTable> SalaryRateTables
        {
            get
            {
                if (_salaryRateTables == null)
                {
                    var newCollection = new FixupCollection<SalaryRateTable>();
                    newCollection.CollectionChanged += FixupSalaryRateTables;
                    _salaryRateTables = newCollection;
                }
                return _salaryRateTables;
            }
            set
            {
                if (!ReferenceEquals(_salaryRateTables, value))
                {
                    var previousValue = _salaryRateTables as FixupCollection<SalaryRateTable>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSalaryRateTables;
                    }
                    _salaryRateTables = value;
                    var newValue = value as FixupCollection<SalaryRateTable>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSalaryRateTables;
                    }
    				OnPropertyChanged("SalaryRateTables");
                }
            }
        }
        private ICollection<SalaryRateTable> _salaryRateTables;
    
        public virtual SalaryScheme SalaryScheme
        {
            get { return _salaryScheme; }
            set
            {
                if (!ReferenceEquals(_salaryScheme, value))
                {
                    var previousValue = _salaryScheme;
                    _salaryScheme = value;
                    FixupSalaryScheme(previousValue);
                }
            }
        }
        private SalaryScheme _salaryScheme;

        #endregion

        #region Association Fixup
    
        private void FixupSalaryScheme(SalaryScheme previousValue)
        {
            if (previousValue != null && previousValue.SalarySchemeCoefficients.Contains(this))
            {
                previousValue.SalarySchemeCoefficients.Remove(this);
            }
    
            if (SalaryScheme != null)
            {
                if (!SalaryScheme.SalarySchemeCoefficients.Contains(this))
                {
                    SalaryScheme.SalarySchemeCoefficients.Add(this);
                }
                if (SalarySchemeId != SalaryScheme.Id)
                {
                    SalarySchemeId = SalaryScheme.Id;
                }
            }
        }
    
        private void FixupSalaryRateTables(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SalaryRateTable item in e.NewItems)
                {
                    item.SalarySchemeCoefficient = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SalaryRateTable item in e.OldItems)
                {
                    if (ReferenceEquals(item.SalarySchemeCoefficient, this))
                    {
                        item.SalarySchemeCoefficient = null;
                    }
                }
            }
        }

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
