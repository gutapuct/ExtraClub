//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace TonusClub.ServiceModel
{

    [DataContract]
    [Serializable]
    public partial class DivisionStar : INotifyPropertyChanged
    {
        private bool _deleted;

        [DataMember]
        public bool Deleted{
            get { return _deleted; }
            set
            {
                if (value != _deleted) Modified = true;
                _deleted = value;
            }
        }

        private bool _modified = false;
        public bool Modified
        {
            get
            {
                return _modified;
            }
            set
            {
                if (_modified != value)
                {
                    _modified = value;
                    OnPropertyChanged("Modified");
                }
            }
        }

        [OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
            OnDeserialized();
        }

        partial void OnDeserialized();

        partial void OnPropertyChangedInternal(string propertyName);

        #region Primitive Properties
        [DataMember]
        public virtual System.Guid Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    _id = value;



                    OnPropertyChanged("Id");
                }
            }
        }
        private System.Guid _id;


        [DataMember]
        public virtual System.Guid DivisionId
        {
            get { return _divisionId; }
            set
            {
                if (_divisionId != value)
                {
                    if (Division != null && Division.Id != value)
                    {
                        Division = null;
                    }
                    _divisionId = value;

                    OnPropertyChanged("DivisionId");
                }
            }
        }
        private System.Guid _divisionId;


        [DataMember]
        public virtual System.Guid EntityId
        {
            get { return _entityId; }
            set
            {
                if (_entityId != value)
                {
                    _entityId = value;



                    OnPropertyChanged("EntityId");
                }
            }
        }
        private System.Guid _entityId;


        [DataMember]
        public virtual string EntityName
        {
            get { return _entityName; }
            set
            {
                if (_entityName != value)
                {
                    _entityName = value;



                    OnPropertyChanged("EntityName");
                }
            }
        }
        private string _entityName;


        [DataMember]
        public virtual System.DateTime CreatedOn
        {
            get { return _createdOn; }
            set
            {
                if (_createdOn != value)
                {
                    _createdOn = value;

                    _createdOn = DateTime.SpecifyKind(_createdOn, DateTimeKind.Local);

                    OnPropertyChanged("CreatedOn");
                }
            }
        }
        private System.DateTime _createdOn;


        [DataMember]
        public virtual int Rating
        {
            get { return _rating; }
            set
            {
                if (_rating != value)
                {
                    _rating = value;



                    OnPropertyChanged("Rating");
                }
            }
        }
        private int _rating;



        #endregion

        #region Navigation Properties

        public virtual Division Division
        {
            get { return _division; }
            set
            {
                if (!ReferenceEquals(_division, value))
                {
                    var previousValue = _division;
                    _division = value;
                    FixupDivision(previousValue);
                }
            }
        }
        private Division _division;

        #endregion

        #region Association Fixup

        private void FixupDivision(Division previousValue)
        {
            if (previousValue != null && previousValue.DivisionStars.Contains(this))
            {
                previousValue.DivisionStars.Remove(this);
            }

            if (Division != null)
            {
                if (!Division.DivisionStars.Contains(this))
                {
                    Division.DivisionStars.Add(this);
                }
                if (DivisionId != Division.Id)
                {
                    DivisionId = Division.Id;
                }
            }
        }

        #endregion


        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName)
        {
            Modified = true;

            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));

            OnPropertyChangedInternal(propertyName);
        }
    }
}