//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace TonusClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class SolariumVisit : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual System.Guid CompanyId
        {
            get { return _companyId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_companyId != value)
                    {
                        if (Company != null && Company.CompanyId != value)
                        {
                            Company = null;
                        }
                        _companyId = value;
        
        				OnPropertyChanged("CompanyId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _companyId;
    
    
    	[DataMember]
        public virtual System.Guid DivisionId
        {
            get { return _divisionId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_divisionId != value)
                    {
                        if (Division != null && Division.Id != value)
                        {
                            Division = null;
                        }
                        _divisionId = value;
        
        				OnPropertyChanged("DivisionId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _divisionId;
    
    
    	[DataMember]
        public virtual System.Guid CustomerId
        {
            get { return _customerId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_customerId != value)
                    {
                        if (Customer != null && Customer.Id != value)
                        {
                            Customer = null;
                        }
                        _customerId = value;
        
        				OnPropertyChanged("CustomerId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _customerId;
    
    
    	[DataMember]
        public virtual System.Guid SolariumId
        {
            get { return _solariumId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_solariumId != value)
                    {
                        if (Solarium != null && Solarium.Id != value)
                        {
                            Solarium = null;
                        }
                        _solariumId = value;
        
        				OnPropertyChanged("SolariumId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _solariumId;
    
    
    	[DataMember]
        public virtual short Status
        {
            get {return _status;}
            set 
    		{ 
    			if(_status != value)
    			{
    				_status = value; 
    				
    				
    
    				OnPropertyChanged("Status");
    			}
    		}
        }
        private short _status;
    
    
    	[DataMember]
        public virtual string Comment
        {
            get {return _comment;}
            set 
    		{ 
    			if(_comment != value)
    			{
    				_comment = value; 
    				
    				
    
    				OnPropertyChanged("Comment");
    			}
    		}
        }
        private string _comment;
    
    
    	[DataMember]
        public virtual System.Guid AuthorId
        {
            get { return _authorId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_authorId != value)
                    {
                        if (CreatedBy != null && CreatedBy.UserId != value)
                        {
                            CreatedBy = null;
                        }
                        _authorId = value;
        
        				OnPropertyChanged("AuthorId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _authorId;
    
    
    	[DataMember]
        public virtual System.DateTime CreatedOn
        {
            get {return _createdOn;}
            set 
    		{ 
    			if(_createdOn != value)
    			{
    				_createdOn = value; 
    				
    				_createdOn = DateTime.SpecifyKind(_createdOn, DateTimeKind.Local);
    
    				OnPropertyChanged("CreatedOn");
    			}
    		}
        }
        private System.DateTime _createdOn;
    
    
    	[DataMember]
        public virtual System.DateTime VisitDate
        {
            get {return _visitDate;}
            set 
    		{ 
    			if(_visitDate != value)
    			{
    				_visitDate = value; 
    				
    				_visitDate = DateTime.SpecifyKind(_visitDate, DateTimeKind.Local);
    
    				OnPropertyChanged("VisitDate");
    			}
    		}
        }
        private System.DateTime _visitDate;
    
    
    	[DataMember]
        public virtual int Amount
        {
            get {return _amount;}
            set 
    		{ 
    			if(_amount != value)
    			{
    				_amount = value; 
    				
    				
    
    				OnPropertyChanged("Amount");
    			}
    		}
        }
        private int _amount;
    
    
    	[DataMember]
        public virtual Nullable<System.Guid> TicketId
        {
            get { return _ticketId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_ticketId != value)
                    {
                        if (Ticket != null && Ticket.Id != value)
                        {
                            Ticket = null;
                        }
                        _ticketId = value;
        
        				OnPropertyChanged("TicketId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _ticketId;
    
    
    	[DataMember]
        public virtual Nullable<decimal> Cost
        {
            get {return _cost;}
            set 
    		{ 
    			if(_cost != value)
    			{
    				_cost = value; 
    				
    				
    
    				OnPropertyChanged("Cost");
    			}
    		}
        }
        private Nullable<decimal> _cost;
    
    

        #endregion

        #region Navigation Properties
    
        public virtual Company Company
        {
            get { return _company; }
            set
            {
                if (!ReferenceEquals(_company, value))
                {
                    var previousValue = _company;
                    _company = value;
                    FixupCompany(previousValue);
                }
            }
        }
        private Company _company;
    
        public virtual Customer Customer
        {
            get { return _customer; }
            set
            {
                if (!ReferenceEquals(_customer, value))
                {
                    var previousValue = _customer;
                    _customer = value;
                    FixupCustomer(previousValue);
                }
            }
        }
        private Customer _customer;
    
        public virtual Solarium Solarium
        {
            get { return _solarium; }
            set
            {
                if (!ReferenceEquals(_solarium, value))
                {
                    var previousValue = _solarium;
                    _solarium = value;
                    FixupSolarium(previousValue);
                }
            }
        }
        private Solarium _solarium;
    
        public virtual User CreatedBy
        {
            get { return _createdBy; }
            set
            {
                if (!ReferenceEquals(_createdBy, value))
                {
                    var previousValue = _createdBy;
                    _createdBy = value;
                    FixupCreatedBy(previousValue);
                }
            }
        }
        private User _createdBy;
    
        public virtual Division Division
        {
            get { return _division; }
            set
            {
                if (!ReferenceEquals(_division, value))
                {
                    var previousValue = _division;
                    _division = value;
                    FixupDivision(previousValue);
                }
            }
        }
        private Division _division;
    
        public virtual Ticket Ticket
        {
            get { return _ticket; }
            set
            {
                if (!ReferenceEquals(_ticket, value))
                {
                    var previousValue = _ticket;
                    _ticket = value;
                    FixupTicket(previousValue);
                }
            }
        }
        private Ticket _ticket;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCompany(Company previousValue)
        {
            if (previousValue != null && previousValue.SolariumVisits.Contains(this))
            {
                previousValue.SolariumVisits.Remove(this);
            }
    
            if (Company != null)
            {
                if (!Company.SolariumVisits.Contains(this))
                {
                    Company.SolariumVisits.Add(this);
                }
                if (CompanyId != Company.CompanyId)
                {
                    CompanyId = Company.CompanyId;
                }
            }
        }
    
        private void FixupCustomer(Customer previousValue)
        {
            if (previousValue != null && previousValue.SolariumVisits.Contains(this))
            {
                previousValue.SolariumVisits.Remove(this);
            }
    
            if (Customer != null)
            {
                if (!Customer.SolariumVisits.Contains(this))
                {
                    Customer.SolariumVisits.Add(this);
                }
                if (CustomerId != Customer.Id)
                {
                    CustomerId = Customer.Id;
                }
            }
        }
    
        private void FixupSolarium(Solarium previousValue)
        {
            if (previousValue != null && previousValue.SolariumVisits.Contains(this))
            {
                previousValue.SolariumVisits.Remove(this);
            }
    
            if (Solarium != null)
            {
                if (!Solarium.SolariumVisits.Contains(this))
                {
                    Solarium.SolariumVisits.Add(this);
                }
                if (SolariumId != Solarium.Id)
                {
                    SolariumId = Solarium.Id;
                }
            }
        }
    
        private void FixupCreatedBy(User previousValue)
        {
            if (previousValue != null && previousValue.SolariumVisits.Contains(this))
            {
                previousValue.SolariumVisits.Remove(this);
            }
    
            if (CreatedBy != null)
            {
                if (!CreatedBy.SolariumVisits.Contains(this))
                {
                    CreatedBy.SolariumVisits.Add(this);
                }
                if (AuthorId != CreatedBy.UserId)
                {
                    AuthorId = CreatedBy.UserId;
                }
            }
        }
    
        private void FixupDivision(Division previousValue)
        {
            if (previousValue != null && previousValue.SolariumVisits.Contains(this))
            {
                previousValue.SolariumVisits.Remove(this);
            }
    
            if (Division != null)
            {
                if (!Division.SolariumVisits.Contains(this))
                {
                    Division.SolariumVisits.Add(this);
                }
                if (DivisionId != Division.Id)
                {
                    DivisionId = Division.Id;
                }
            }
        }
    
        private void FixupTicket(Ticket previousValue)
        {
            if (previousValue != null && previousValue.SolariumVisits.Contains(this))
            {
                previousValue.SolariumVisits.Remove(this);
            }
    
            if (Ticket != null)
            {
                if (!Ticket.SolariumVisits.Contains(this))
                {
                    Ticket.SolariumVisits.Add(this);
                }
                if (TicketId != Ticket.Id)
                {
                    TicketId = Ticket.Id;
                }
            }
            else if (!_settingFK)
            {
                TicketId = null;
            }
        }

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
