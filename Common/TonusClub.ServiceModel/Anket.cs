//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace TonusClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class Anket : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual System.Guid CompanyId
        {
            get {return _companyId;}
            set 
    		{ 
    			if(_companyId != value)
    			{
    				_companyId = value; 
    				
    				
    
    				OnPropertyChanged("CompanyId");
    			}
    		}
        }
        private System.Guid _companyId;
    
    
    	[DataMember]
        public virtual System.Guid CreatedBy
        {
            get {return _createdBy;}
            set 
    		{ 
    			if(_createdBy != value)
    			{
    				_createdBy = value; 
    				
    				
    
    				OnPropertyChanged("CreatedBy");
    			}
    		}
        }
        private System.Guid _createdBy;
    
    
    	[DataMember]
        public virtual System.DateTime CreatedOn
        {
            get {return _createdOn;}
            set 
    		{ 
    			if(_createdOn != value)
    			{
    				_createdOn = value; 
    				
    				_createdOn = DateTime.SpecifyKind(_createdOn, DateTimeKind.Local);
    
    				OnPropertyChanged("CreatedOn");
    			}
    		}
        }
        private System.DateTime _createdOn;
    
    
    	[DataMember]
        public virtual System.DateTime Period
        {
            get {return _period;}
            set 
    		{ 
    			if(_period != value)
    			{
    				_period = value; 
    				
    				_period = DateTime.SpecifyKind(_period, DateTimeKind.Local);
    
    				OnPropertyChanged("Period");
    			}
    		}
        }
        private System.DateTime _period;
    
    
    	[DataMember]
        public virtual int StatusId
        {
            get {return _statusId;}
            set 
    		{ 
    			if(_statusId != value)
    			{
    				_statusId = value; 
    				
    				
    
    				OnPropertyChanged("StatusId");
    			}
    		}
        }
        private int _statusId;
    
    
    	[DataMember]
        public virtual System.Guid DivisionId
        {
            get {return _divisionId;}
            set 
    		{ 
    			if(_divisionId != value)
    			{
    				_divisionId = value; 
    				
    				
    
    				OnPropertyChanged("DivisionId");
    			}
    		}
        }
        private System.Guid _divisionId;
    
    
    	[DataMember]
        public virtual bool PriceChanges
        {
            get {return _priceChanges;}
            set 
    		{ 
    			if(_priceChanges != value)
    			{
    				_priceChanges = value; 
    				
    				
    
    				OnPropertyChanged("PriceChanges");
    			}
    		}
        }
        private bool _priceChanges;
    
    
    	[DataMember]
        public virtual int TotalWorkdays
        {
            get {return _totalWorkdays;}
            set 
    		{ 
    			if(_totalWorkdays != value)
    			{
    				_totalWorkdays = value; 
    				
    				
    
    				OnPropertyChanged("TotalWorkdays");
    			}
    		}
        }
        private int _totalWorkdays;
    
    
    	[DataMember]
        public virtual decimal AvgVisitors
        {
            get {return _avgVisitors;}
            set 
    		{ 
    			if(_avgVisitors != value)
    			{
    				_avgVisitors = value; 
    				
    				
    
    				OnPropertyChanged("AvgVisitors");
    			}
    		}
        }
        private decimal _avgVisitors;
    
    
    	[DataMember]
        public virtual decimal AvgTreatments
        {
            get {return _avgTreatments;}
            set 
    		{ 
    			if(_avgTreatments != value)
    			{
    				_avgTreatments = value; 
    				
    				
    
    				OnPropertyChanged("AvgTreatments");
    			}
    		}
        }
        private decimal _avgTreatments;
    
    
    	[DataMember]
        public virtual int TotalTestVisitors
        {
            get {return _totalTestVisitors;}
            set 
    		{ 
    			if(_totalTestVisitors != value)
    			{
    				_totalTestVisitors = value; 
    				
    				
    
    				OnPropertyChanged("TotalTestVisitors");
    			}
    		}
        }
        private int _totalTestVisitors;
    
    
    	[DataMember]
        public virtual int TotalBuyAfterTest
        {
            get {return _totalBuyAfterTest;}
            set 
    		{ 
    			if(_totalBuyAfterTest != value)
    			{
    				_totalBuyAfterTest = value; 
    				
    				
    
    				OnPropertyChanged("TotalBuyAfterTest");
    			}
    		}
        }
        private int _totalBuyAfterTest;
    
    
    	[DataMember]
        public virtual decimal AdvertSpendings
        {
            get {return _advertSpendings;}
            set 
    		{ 
    			if(_advertSpendings != value)
    			{
    				_advertSpendings = value; 
    				
    				
    
    				OnPropertyChanged("AdvertSpendings");
    			}
    		}
        }
        private decimal _advertSpendings;
    
    
    	[DataMember]
        public virtual string NetActions
        {
            get {return _netActions;}
            set 
    		{ 
    			if(_netActions != value)
    			{
    				_netActions = value; 
    				
    				
    
    				OnPropertyChanged("NetActions");
    			}
    		}
        }
        private string _netActions;
    
    
    	[DataMember]
        public virtual bool HadSelfActions
        {
            get {return _hadSelfActions;}
            set 
    		{ 
    			if(_hadSelfActions != value)
    			{
    				_hadSelfActions = value; 
    				
    				
    
    				OnPropertyChanged("HadSelfActions");
    			}
    		}
        }
        private bool _hadSelfActions;
    
    
    	[DataMember]
        public virtual string SelfActions
        {
            get {return _selfActions;}
            set 
    		{ 
    			if(_selfActions != value)
    			{
    				_selfActions = value; 
    				
    				
    
    				OnPropertyChanged("SelfActions");
    			}
    		}
        }
        private string _selfActions;
    
    
    	[DataMember]
        public virtual string NextNetActions
        {
            get {return _nextNetActions;}
            set 
    		{ 
    			if(_nextNetActions != value)
    			{
    				_nextNetActions = value; 
    				
    				
    
    				OnPropertyChanged("NextNetActions");
    			}
    		}
        }
        private string _nextNetActions;
    
    
    	[DataMember]
        public virtual int RecurringTickets
        {
            get {return _recurringTickets;}
            set 
    		{ 
    			if(_recurringTickets != value)
    			{
    				_recurringTickets = value; 
    				
    				
    
    				OnPropertyChanged("RecurringTickets");
    			}
    		}
        }
        private int _recurringTickets;
    
    
    	[DataMember]
        public virtual decimal PlanComplete
        {
            get {return _planComplete;}
            set 
    		{ 
    			if(_planComplete != value)
    			{
    				_planComplete = value; 
    				
    				
    
    				OnPropertyChanged("PlanComplete");
    			}
    		}
        }
        private decimal _planComplete;
    
    
    	[DataMember]
        public virtual decimal TotalCash
        {
            get {return _totalCash;}
            set 
    		{ 
    			if(_totalCash != value)
    			{
    				_totalCash = value; 
    				
    				
    
    				OnPropertyChanged("TotalCash");
    			}
    		}
        }
        private decimal _totalCash;
    
    
    	[DataMember]
        public virtual Nullable<int> EmployeesGrade
        {
            get {return _employeesGrade;}
            set 
    		{ 
    			if(_employeesGrade != value)
    			{
    				_employeesGrade = value; 
    				
    				
    
    				OnPropertyChanged("EmployeesGrade");
    			}
    		}
        }
        private Nullable<int> _employeesGrade;
    
    
    	[DataMember]
        public virtual string EmployeesGradeDesc
        {
            get {return _employeesGradeDesc;}
            set 
    		{ 
    			if(_employeesGradeDesc != value)
    			{
    				_employeesGradeDesc = value; 
    				
    				
    
    				OnPropertyChanged("EmployeesGradeDesc");
    			}
    		}
        }
        private string _employeesGradeDesc;
    
    
    	[DataMember]
        public virtual bool EmployeesChange
        {
            get {return _employeesChange;}
            set 
    		{ 
    			if(_employeesChange != value)
    			{
    				_employeesChange = value; 
    				
    				
    
    				OnPropertyChanged("EmployeesChange");
    			}
    		}
        }
        private bool _employeesChange;
    
    
    	[DataMember]
        public virtual bool Meeting
        {
            get {return _meeting;}
            set 
    		{ 
    			if(_meeting != value)
    			{
    				_meeting = value; 
    				
    				
    
    				OnPropertyChanged("Meeting");
    			}
    		}
        }
        private bool _meeting;
    
    
    	[DataMember]
        public virtual string MeetingDesc
        {
            get {return _meetingDesc;}
            set 
    		{ 
    			if(_meetingDesc != value)
    			{
    				_meetingDesc = value; 
    				
    				
    
    				OnPropertyChanged("MeetingDesc");
    			}
    		}
        }
        private string _meetingDesc;
    
    
    	[DataMember]
        public virtual bool Test
        {
            get {return _test;}
            set 
    		{ 
    			if(_test != value)
    			{
    				_test = value; 
    				
    				
    
    				OnPropertyChanged("Test");
    			}
    		}
        }
        private bool _test;
    
    
    	[DataMember]
        public virtual string TestDesc
        {
            get {return _testDesc;}
            set 
    		{ 
    			if(_testDesc != value)
    			{
    				_testDesc = value; 
    				
    				
    
    				OnPropertyChanged("TestDesc");
    			}
    		}
        }
        private string _testDesc;
    
    
    	[DataMember]
        public virtual bool NewTreatments
        {
            get {return _newTreatments;}
            set 
    		{ 
    			if(_newTreatments != value)
    			{
    				_newTreatments = value; 
    				
    				
    
    				OnPropertyChanged("NewTreatments");
    			}
    		}
        }
        private bool _newTreatments;
    
    
    	[DataMember]
        public virtual string NewTreatmentsDesc
        {
            get {return _newTreatmentsDesc;}
            set 
    		{ 
    			if(_newTreatmentsDesc != value)
    			{
    				_newTreatmentsDesc = value; 
    				
    				
    
    				OnPropertyChanged("NewTreatmentsDesc");
    			}
    		}
        }
        private string _newTreatmentsDesc;
    
    
    	[DataMember]
        public virtual bool TreatmentProblems
        {
            get {return _treatmentProblems;}
            set 
    		{ 
    			if(_treatmentProblems != value)
    			{
    				_treatmentProblems = value; 
    				
    				
    
    				OnPropertyChanged("TreatmentProblems");
    			}
    		}
        }
        private bool _treatmentProblems;
    
    
    	[DataMember]
        public virtual string TreatmentProblemsDesc
        {
            get {return _treatmentProblemsDesc;}
            set 
    		{ 
    			if(_treatmentProblemsDesc != value)
    			{
    				_treatmentProblemsDesc = value; 
    				
    				
    
    				OnPropertyChanged("TreatmentProblemsDesc");
    			}
    		}
        }
        private string _treatmentProblemsDesc;
    
    
    	[DataMember]
        public virtual bool ClubInfo
        {
            get {return _clubInfo;}
            set 
    		{ 
    			if(_clubInfo != value)
    			{
    				_clubInfo = value; 
    				
    				
    
    				OnPropertyChanged("ClubInfo");
    			}
    		}
        }
        private bool _clubInfo;
    
    
    	[DataMember]
        public virtual string ClubInfoDesc
        {
            get {return _clubInfoDesc;}
            set 
    		{ 
    			if(_clubInfoDesc != value)
    			{
    				_clubInfoDesc = value; 
    				
    				
    
    				OnPropertyChanged("ClubInfoDesc");
    			}
    		}
        }
        private string _clubInfoDesc;
    
    
    	[DataMember]
        public virtual bool ClubNews
        {
            get {return _clubNews;}
            set 
    		{ 
    			if(_clubNews != value)
    			{
    				_clubNews = value; 
    				
    				
    
    				OnPropertyChanged("ClubNews");
    			}
    		}
        }
        private bool _clubNews;
    
    
    	[DataMember]
        public virtual string ClubNewsDesc
        {
            get {return _clubNewsDesc;}
            set 
    		{ 
    			if(_clubNewsDesc != value)
    			{
    				_clubNewsDesc = value; 
    				
    				
    
    				OnPropertyChanged("ClubNewsDesc");
    			}
    		}
        }
        private string _clubNewsDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> ClubDevGrade
        {
            get {return _clubDevGrade;}
            set 
    		{ 
    			if(_clubDevGrade != value)
    			{
    				_clubDevGrade = value; 
    				
    				
    
    				OnPropertyChanged("ClubDevGrade");
    			}
    		}
        }
        private Nullable<int> _clubDevGrade;
    
    
    	[DataMember]
        public virtual string ClubDevDesc
        {
            get {return _clubDevDesc;}
            set 
    		{ 
    			if(_clubDevDesc != value)
    			{
    				_clubDevDesc = value; 
    				
    				
    
    				OnPropertyChanged("ClubDevDesc");
    			}
    		}
        }
        private string _clubDevDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> SelfGrade
        {
            get {return _selfGrade;}
            set 
    		{ 
    			if(_selfGrade != value)
    			{
    				_selfGrade = value; 
    				
    				
    
    				OnPropertyChanged("SelfGrade");
    			}
    		}
        }
        private Nullable<int> _selfGrade;
    
    
    	[DataMember]
        public virtual string SelfDesc
        {
            get {return _selfDesc;}
            set 
    		{ 
    			if(_selfDesc != value)
    			{
    				_selfDesc = value; 
    				
    				
    
    				OnPropertyChanged("SelfDesc");
    			}
    		}
        }
        private string _selfDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> FranchGrade
        {
            get {return _franchGrade;}
            set 
    		{ 
    			if(_franchGrade != value)
    			{
    				_franchGrade = value; 
    				
    				
    
    				OnPropertyChanged("FranchGrade");
    			}
    		}
        }
        private Nullable<int> _franchGrade;
    
    
    	[DataMember]
        public virtual string FranchDesc
        {
            get {return _franchDesc;}
            set 
    		{ 
    			if(_franchDesc != value)
    			{
    				_franchDesc = value; 
    				
    				
    
    				OnPropertyChanged("FranchDesc");
    			}
    		}
        }
        private string _franchDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> FranchSuppGrade
        {
            get {return _franchSuppGrade;}
            set 
    		{ 
    			if(_franchSuppGrade != value)
    			{
    				_franchSuppGrade = value; 
    				
    				
    
    				OnPropertyChanged("FranchSuppGrade");
    			}
    		}
        }
        private Nullable<int> _franchSuppGrade;
    
    
    	[DataMember]
        public virtual string FranchSuppDesc
        {
            get {return _franchSuppDesc;}
            set 
    		{ 
    			if(_franchSuppDesc != value)
    			{
    				_franchSuppDesc = value; 
    				
    				
    
    				OnPropertyChanged("FranchSuppDesc");
    			}
    		}
        }
        private string _franchSuppDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> AsuSuppGrade
        {
            get {return _asuSuppGrade;}
            set 
    		{ 
    			if(_asuSuppGrade != value)
    			{
    				_asuSuppGrade = value; 
    				
    				
    
    				OnPropertyChanged("AsuSuppGrade");
    			}
    		}
        }
        private Nullable<int> _asuSuppGrade;
    
    
    	[DataMember]
        public virtual string AsuSuppDesc
        {
            get {return _asuSuppDesc;}
            set 
    		{ 
    			if(_asuSuppDesc != value)
    			{
    				_asuSuppDesc = value; 
    				
    				
    
    				OnPropertyChanged("AsuSuppDesc");
    			}
    		}
        }
        private string _asuSuppDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> DesignerGrade
        {
            get {return _designerGrade;}
            set 
    		{ 
    			if(_designerGrade != value)
    			{
    				_designerGrade = value; 
    				
    				
    
    				OnPropertyChanged("DesignerGrade");
    			}
    		}
        }
        private Nullable<int> _designerGrade;
    
    
    	[DataMember]
        public virtual string DesignerDesc
        {
            get {return _designerDesc;}
            set 
    		{ 
    			if(_designerDesc != value)
    			{
    				_designerDesc = value; 
    				
    				
    
    				OnPropertyChanged("DesignerDesc");
    			}
    		}
        }
        private string _designerDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> SiteAdmGrade
        {
            get {return _siteAdmGrade;}
            set 
    		{ 
    			if(_siteAdmGrade != value)
    			{
    				_siteAdmGrade = value; 
    				
    				
    
    				OnPropertyChanged("SiteAdmGrade");
    			}
    		}
        }
        private Nullable<int> _siteAdmGrade;
    
    
    	[DataMember]
        public virtual string SiteAdmDesc
        {
            get {return _siteAdmDesc;}
            set 
    		{ 
    			if(_siteAdmDesc != value)
    			{
    				_siteAdmDesc = value; 
    				
    				
    
    				OnPropertyChanged("SiteAdmDesc");
    			}
    		}
        }
        private string _siteAdmDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> AccountantsGrade
        {
            get {return _accountantsGrade;}
            set 
    		{ 
    			if(_accountantsGrade != value)
    			{
    				_accountantsGrade = value; 
    				
    				
    
    				OnPropertyChanged("AccountantsGrade");
    			}
    		}
        }
        private Nullable<int> _accountantsGrade;
    
    
    	[DataMember]
        public virtual string AccountantsDesc
        {
            get {return _accountantsDesc;}
            set 
    		{ 
    			if(_accountantsDesc != value)
    			{
    				_accountantsDesc = value; 
    				
    				
    
    				OnPropertyChanged("AccountantsDesc");
    			}
    		}
        }
        private string _accountantsDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> LogistGrade
        {
            get {return _logistGrade;}
            set 
    		{ 
    			if(_logistGrade != value)
    			{
    				_logistGrade = value; 
    				
    				
    
    				OnPropertyChanged("LogistGrade");
    			}
    		}
        }
        private Nullable<int> _logistGrade;
    
    
    	[DataMember]
        public virtual string LogistDesc
        {
            get {return _logistDesc;}
            set 
    		{ 
    			if(_logistDesc != value)
    			{
    				_logistDesc = value; 
    				
    				
    
    				OnPropertyChanged("LogistDesc");
    			}
    		}
        }
        private string _logistDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> RepairGrade
        {
            get {return _repairGrade;}
            set 
    		{ 
    			if(_repairGrade != value)
    			{
    				_repairGrade = value; 
    				
    				
    
    				OnPropertyChanged("RepairGrade");
    			}
    		}
        }
        private Nullable<int> _repairGrade;
    
    
    	[DataMember]
        public virtual string RepairDesc
        {
            get {return _repairDesc;}
            set 
    		{ 
    			if(_repairDesc != value)
    			{
    				_repairDesc = value; 
    				
    				
    
    				OnPropertyChanged("RepairDesc");
    			}
    		}
        }
        private string _repairDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> BeautyNatureGrade
        {
            get {return _beautyNatureGrade;}
            set 
    		{ 
    			if(_beautyNatureGrade != value)
    			{
    				_beautyNatureGrade = value; 
    				
    				
    
    				OnPropertyChanged("BeautyNatureGrade");
    			}
    		}
        }
        private Nullable<int> _beautyNatureGrade;
    
    
    	[DataMember]
        public virtual string BeautyNatureDesc
        {
            get {return _beautyNatureDesc;}
            set 
    		{ 
    			if(_beautyNatureDesc != value)
    			{
    				_beautyNatureDesc = value; 
    				
    				
    
    				OnPropertyChanged("BeautyNatureDesc");
    			}
    		}
        }
        private string _beautyNatureDesc;
    
    
    	[DataMember]
        public virtual Nullable<int> BeInformedGrade
        {
            get {return _beInformedGrade;}
            set 
    		{ 
    			if(_beInformedGrade != value)
    			{
    				_beInformedGrade = value; 
    				
    				
    
    				OnPropertyChanged("BeInformedGrade");
    			}
    		}
        }
        private Nullable<int> _beInformedGrade;
    
    
    	[DataMember]
        public virtual string BeInformedDesc
        {
            get {return _beInformedDesc;}
            set 
    		{ 
    			if(_beInformedDesc != value)
    			{
    				_beInformedDesc = value; 
    				
    				
    
    				OnPropertyChanged("BeInformedDesc");
    			}
    		}
        }
        private string _beInformedDesc;
    
    
    	[DataMember]
        public virtual string IncomeFactors
        {
            get {return _incomeFactors;}
            set 
    		{ 
    			if(_incomeFactors != value)
    			{
    				_incomeFactors = value; 
    				
    				
    
    				OnPropertyChanged("IncomeFactors");
    			}
    		}
        }
        private string _incomeFactors;
    
    
    	[DataMember]
        public virtual string Wishes
        {
            get {return _wishes;}
            set 
    		{ 
    			if(_wishes != value)
    			{
    				_wishes = value; 
    				
    				
    
    				OnPropertyChanged("Wishes");
    			}
    		}
        }
        private string _wishes;
    
    
    	[DataMember]
        public virtual string FilledBy
        {
            get {return _filledBy;}
            set 
    		{ 
    			if(_filledBy != value)
    			{
    				_filledBy = value; 
    				
    				
    
    				OnPropertyChanged("FilledBy");
    			}
    		}
        }
        private string _filledBy;
    
    
    	[DataMember]
        public virtual string FilledByPosition
        {
            get {return _filledByPosition;}
            set 
    		{ 
    			if(_filledByPosition != value)
    			{
    				_filledByPosition = value; 
    				
    				
    
    				OnPropertyChanged("FilledByPosition");
    			}
    		}
        }
        private string _filledByPosition;
    
    
    	[DataMember]
        public virtual Nullable<System.DateTime> SentDate
        {
            get {return _sentDate;}
            set 
    		{ 
    			if(_sentDate != value)
    			{
    				_sentDate = value; 
    				
    				if (_sentDate.HasValue) _sentDate = DateTime.SpecifyKind(_sentDate.Value, DateTimeKind.Local);
    
    				OnPropertyChanged("SentDate");
    			}
    		}
        }
        private Nullable<System.DateTime> _sentDate;
    
    
    	[DataMember]
        public virtual string OlorantiFood
        {
            get {return _olorantiFood;}
            set 
    		{ 
    			if(_olorantiFood != value)
    			{
    				_olorantiFood = value; 
    				
    				
    
    				OnPropertyChanged("OlorantiFood");
    			}
    		}
        }
        private string _olorantiFood;
    
    
    	[DataMember]
        public virtual string OlorantiCosm
        {
            get {return _olorantiCosm;}
            set 
    		{ 
    			if(_olorantiCosm != value)
    			{
    				_olorantiCosm = value; 
    				
    				
    
    				OnPropertyChanged("OlorantiCosm");
    			}
    		}
        }
        private string _olorantiCosm;
    
    
    	[DataMember]
        public virtual string HomeEquipment
        {
            get {return _homeEquipment;}
            set 
    		{ 
    			if(_homeEquipment != value)
    			{
    				_homeEquipment = value; 
    				
    				
    
    				OnPropertyChanged("HomeEquipment");
    			}
    		}
        }
        private string _homeEquipment;
    
    

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<AnketTicket> AnketTickets
        {
            get
            {
                if (_anketTickets == null)
                {
                    var newCollection = new FixupCollection<AnketTicket>();
                    newCollection.CollectionChanged += FixupAnketTickets;
                    _anketTickets = newCollection;
                }
                return _anketTickets;
            }
            set
            {
                if (!ReferenceEquals(_anketTickets, value))
                {
                    var previousValue = _anketTickets as FixupCollection<AnketTicket>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAnketTickets;
                    }
                    _anketTickets = value;
                    var newValue = value as FixupCollection<AnketTicket>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAnketTickets;
                    }
    				OnPropertyChanged("AnketTickets");
                }
            }
        }
        private ICollection<AnketTicket> _anketTickets;
    
        public virtual ICollection<AnketTreatment> AnketTreatments
        {
            get
            {
                if (_anketTreatments == null)
                {
                    var newCollection = new FixupCollection<AnketTreatment>();
                    newCollection.CollectionChanged += FixupAnketTreatments;
                    _anketTreatments = newCollection;
                }
                return _anketTreatments;
            }
            set
            {
                if (!ReferenceEquals(_anketTreatments, value))
                {
                    var previousValue = _anketTreatments as FixupCollection<AnketTreatment>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAnketTreatments;
                    }
                    _anketTreatments = value;
                    var newValue = value as FixupCollection<AnketTreatment>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAnketTreatments;
                    }
    				OnPropertyChanged("AnketTreatments");
                }
            }
        }
        private ICollection<AnketTreatment> _anketTreatments;
    
        public virtual ICollection<AnketAdvert> AnketAdverts
        {
            get
            {
                if (_anketAdverts == null)
                {
                    var newCollection = new FixupCollection<AnketAdvert>();
                    newCollection.CollectionChanged += FixupAnketAdverts;
                    _anketAdverts = newCollection;
                }
                return _anketAdverts;
            }
            set
            {
                if (!ReferenceEquals(_anketAdverts, value))
                {
                    var previousValue = _anketAdverts as FixupCollection<AnketAdvert>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAnketAdverts;
                    }
                    _anketAdverts = value;
                    var newValue = value as FixupCollection<AnketAdvert>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAnketAdverts;
                    }
    				OnPropertyChanged("AnketAdverts");
                }
            }
        }
        private ICollection<AnketAdvert> _anketAdverts;

        #endregion

        #region Association Fixup
    
        private void FixupAnketTickets(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AnketTicket item in e.NewItems)
                {
                    item.Anket = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AnketTicket item in e.OldItems)
                {
                    if (ReferenceEquals(item.Anket, this))
                    {
                        item.Anket = null;
                    }
                }
            }
        }
    
        private void FixupAnketTreatments(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AnketTreatment item in e.NewItems)
                {
                    item.Anket = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AnketTreatment item in e.OldItems)
                {
                    if (ReferenceEquals(item.Anket, this))
                    {
                        item.Anket = null;
                    }
                }
            }
        }
    
        private void FixupAnketAdverts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AnketAdvert item in e.NewItems)
                {
                    item.Anket = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AnketAdvert item in e.OldItems)
                {
                    if (ReferenceEquals(item.Anket, this))
                    {
                        item.Anket = null;
                    }
                }
            }
        }

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
