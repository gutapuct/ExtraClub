//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace TonusClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class ConsignmentLine : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual System.Guid ConsignmentId
        {
            get { return _consignmentId; }
            set
            {
                if (_consignmentId != value)
                {
                    if (Consignment != null && Consignment.Id != value)
                    {
                        Consignment = null;
                    }
                    _consignmentId = value;
    
    				OnPropertyChanged("ConsignmentId");
                }
            }
        }
        private System.Guid _consignmentId;
    
    
    	[DataMember]
        public virtual System.Guid GoodId
        {
            get { return _goodId; }
            set
            {
                if (_goodId != value)
                {
                    if (Good != null && Good.Id != value)
                    {
                        Good = null;
                    }
                    _goodId = value;
    
    				OnPropertyChanged("GoodId");
                }
            }
        }
        private System.Guid _goodId;
    
    
    	[DataMember]
        public virtual Nullable<double> Quantity
        {
            get {return _quantity;}
            set 
    		{ 
    			if(_quantity != value)
    			{
    				_quantity = value; 
    				
    				
    
    				OnPropertyChanged("Quantity");
    			}
    		}
        }
        private Nullable<double> _quantity;
    
    
    	[DataMember]
        public virtual Nullable<decimal> Price
        {
            get {return _price;}
            set 
    		{ 
    			if(_price != value)
    			{
    				_price = value; 
    				
    				
    
    				OnPropertyChanged("Price");
    			}
    		}
        }
        private Nullable<decimal> _price;
    
    
    	[DataMember]
        public virtual Nullable<System.DateTime> Expiry
        {
            get {return _expiry;}
            set 
    		{ 
    			if(_expiry != value)
    			{
    				_expiry = value; 
    				
    				if (_expiry.HasValue) _expiry = DateTime.SpecifyKind(_expiry.Value, DateTimeKind.Local);
    
    				OnPropertyChanged("Expiry");
    			}
    		}
        }
        private Nullable<System.DateTime> _expiry;
    
    
    	[DataMember]
        public virtual System.Guid AuthorId
        {
            get { return _authorId; }
            set
            {
                if (_authorId != value)
                {
                    if (CreatedBy != null && CreatedBy.UserId != value)
                    {
                        CreatedBy = null;
                    }
                    _authorId = value;
    
    				OnPropertyChanged("AuthorId");
                }
            }
        }
        private System.Guid _authorId;
    
    
    	[DataMember]
        public virtual System.Guid CompanyId
        {
            get { return _companyId; }
            set
            {
                if (_companyId != value)
                {
                    if (Company != null && Company.CompanyId != value)
                    {
                        Company = null;
                    }
                    _companyId = value;
    
    				OnPropertyChanged("CompanyId");
                }
            }
        }
        private System.Guid _companyId;
    
    
    	[DataMember]
        public virtual Nullable<short> Position
        {
            get {return _position;}
            set 
    		{ 
    			if(_position != value)
    			{
    				_position = value; 
    				
    				
    
    				OnPropertyChanged("Position");
    			}
    		}
        }
        private Nullable<short> _position;
    
    
    	[DataMember]
        public virtual string Comment
        {
            get {return _comment;}
            set 
    		{ 
    			if(_comment != value)
    			{
    				_comment = value; 
    				
    				
    
    				OnPropertyChanged("Comment");
    			}
    		}
        }
        private string _comment;
    
    

        #endregion

        #region Navigation Properties
    
        public virtual Consignment Consignment
        {
            get { return _consignment; }
            set
            {
                if (!ReferenceEquals(_consignment, value))
                {
                    var previousValue = _consignment;
                    _consignment = value;
                    FixupConsignment(previousValue);
                }
            }
        }
        private Consignment _consignment;
    
        public virtual Good Good
        {
            get { return _good; }
            set
            {
                if (!ReferenceEquals(_good, value))
                {
                    var previousValue = _good;
                    _good = value;
                    FixupGood(previousValue);
                }
            }
        }
        private Good _good;
    
        public virtual User CreatedBy
        {
            get { return _createdBy; }
            set
            {
                if (!ReferenceEquals(_createdBy, value))
                {
                    var previousValue = _createdBy;
                    _createdBy = value;
                    FixupCreatedBy(previousValue);
                }
            }
        }
        private User _createdBy;
    
        public virtual Company Company
        {
            get { return _company; }
            set
            {
                if (!ReferenceEquals(_company, value))
                {
                    var previousValue = _company;
                    _company = value;
                    FixupCompany(previousValue);
                }
            }
        }
        private Company _company;

        #endregion

        #region Association Fixup
    
        private void FixupConsignment(Consignment previousValue)
        {
            if (previousValue != null && previousValue.ConsignmentLines.Contains(this))
            {
                previousValue.ConsignmentLines.Remove(this);
            }
    
            if (Consignment != null)
            {
                if (!Consignment.ConsignmentLines.Contains(this))
                {
                    Consignment.ConsignmentLines.Add(this);
                }
                if (ConsignmentId != Consignment.Id)
                {
                    ConsignmentId = Consignment.Id;
                }
            }
        }
    
        private void FixupGood(Good previousValue)
        {
            if (previousValue != null && previousValue.ConsignmentLines.Contains(this))
            {
                previousValue.ConsignmentLines.Remove(this);
            }
    
            if (Good != null)
            {
                if (!Good.ConsignmentLines.Contains(this))
                {
                    Good.ConsignmentLines.Add(this);
                }
                if (GoodId != Good.Id)
                {
                    GoodId = Good.Id;
                }
            }
        }
    
        private void FixupCreatedBy(User previousValue)
        {
            if (CreatedBy != null)
            {
                if (AuthorId != CreatedBy.UserId)
                {
                    AuthorId = CreatedBy.UserId;
                }
            }
        }
    
        private void FixupCompany(Company previousValue)
        {
            if (Company != null)
            {
                if (CompanyId != Company.CompanyId)
                {
                    CompanyId = Company.CompanyId;
                }
            }
        }

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
