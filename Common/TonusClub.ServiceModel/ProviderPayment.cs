//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace TonusClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class ProviderPayment : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual System.Guid ProviderId
        {
            get { return _providerId; }
            set
            {
                if (_providerId != value)
                {
                    if (Provider != null && Provider.Id != value)
                    {
                        Provider = null;
                    }
                    _providerId = value;
    
    				OnPropertyChanged("ProviderId");
                }
            }
        }
        private System.Guid _providerId;
    
    
    	[DataMember]
        public virtual System.DateTime Date
        {
            get {return _date;}
            set 
    		{ 
    			if(_date != value)
    			{
    				_date = value; 
    				
    				_date = DateTime.SpecifyKind(_date, DateTimeKind.Local);
    
    				OnPropertyChanged("Date");
    			}
    		}
        }
        private System.DateTime _date;
    
    
    	[DataMember]
        public virtual Nullable<int> Number
        {
            get {return _number;}
            set 
    		{ 
    			if(_number != value)
    			{
    				_number = value; 
    				
    				
    
    				OnPropertyChanged("Number");
    			}
    		}
        }
        private Nullable<int> _number;
    
    
    	[DataMember]
        public virtual decimal Amount
        {
            get {return _amount;}
            set 
    		{ 
    			if(_amount != value)
    			{
    				_amount = value; 
    				
    				
    
    				OnPropertyChanged("Amount");
    			}
    		}
        }
        private decimal _amount;
    
    
    	[DataMember]
        public virtual string Comment
        {
            get {return _comment;}
            set 
    		{ 
    			if(_comment != value)
    			{
    				_comment = value; 
    				
    				
    
    				OnPropertyChanged("Comment");
    			}
    		}
        }
        private string _comment;
    
    
    	[DataMember]
        public virtual System.Guid AuthorId
        {
            get { return _authorId; }
            set
            {
                if (_authorId != value)
                {
                    if (CreatedBy != null && CreatedBy.UserId != value)
                    {
                        CreatedBy = null;
                    }
                    _authorId = value;
    
    				OnPropertyChanged("AuthorId");
                }
            }
        }
        private System.Guid _authorId;
    
    
    	[DataMember]
        public virtual System.Guid CompanyId
        {
            get { return _companyId; }
            set
            {
                if (_companyId != value)
                {
                    if (Company != null && Company.CompanyId != value)
                    {
                        Company = null;
                    }
                    _companyId = value;
    
    				OnPropertyChanged("CompanyId");
                }
            }
        }
        private System.Guid _companyId;
    
    
    	[DataMember]
        public virtual Nullable<int> FirebirdId
        {
            get {return _firebirdId;}
            set 
    		{ 
    			if(_firebirdId != value)
    			{
    				_firebirdId = value; 
    				
    				
    
    				OnPropertyChanged("FirebirdId");
    			}
    		}
        }
        private Nullable<int> _firebirdId;
    
    
    	[DataMember]
        public virtual System.Guid OrderId
        {
            get { return _orderId; }
            set
            {
                if (_orderId != value)
                {
                    if (Order != null && Order.Id != value)
                    {
                        Order = null;
                    }
                    _orderId = value;
    
    				OnPropertyChanged("OrderId");
                }
            }
        }
        private System.Guid _orderId;
    
    
    	[DataMember]
        public virtual string PaymentType
        {
            get {return _paymentType;}
            set 
    		{ 
    			if(_paymentType != value)
    			{
    				_paymentType = value; 
    				
    				
    
    				OnPropertyChanged("PaymentType");
    			}
    		}
        }
        private string _paymentType;
    
    

        #endregion

        #region Navigation Properties
    
        public virtual Company Company
        {
            get { return _company; }
            set
            {
                if (!ReferenceEquals(_company, value))
                {
                    var previousValue = _company;
                    _company = value;
                    FixupCompany(previousValue);
                }
            }
        }
        private Company _company;
    
        public virtual Provider Provider
        {
            get { return _provider; }
            set
            {
                if (!ReferenceEquals(_provider, value))
                {
                    var previousValue = _provider;
                    _provider = value;
                    FixupProvider(previousValue);
                }
            }
        }
        private Provider _provider;
    
        public virtual User CreatedBy
        {
            get { return _createdBy; }
            set
            {
                if (!ReferenceEquals(_createdBy, value))
                {
                    var previousValue = _createdBy;
                    _createdBy = value;
                    FixupCreatedBy(previousValue);
                }
            }
        }
        private User _createdBy;
    
        public virtual Consignment Order
        {
            get { return _order; }
            set
            {
                if (!ReferenceEquals(_order, value))
                {
                    var previousValue = _order;
                    _order = value;
                    FixupOrder(previousValue);
                }
            }
        }
        private Consignment _order;

        #endregion

        #region Association Fixup
    
        private void FixupCompany(Company previousValue)
        {
            if (previousValue != null && previousValue.ProviderPayments.Contains(this))
            {
                previousValue.ProviderPayments.Remove(this);
            }
    
            if (Company != null)
            {
                if (!Company.ProviderPayments.Contains(this))
                {
                    Company.ProviderPayments.Add(this);
                }
                if (CompanyId != Company.CompanyId)
                {
                    CompanyId = Company.CompanyId;
                }
            }
        }
    
        private void FixupProvider(Provider previousValue)
        {
            if (previousValue != null && previousValue.ProviderPayments.Contains(this))
            {
                previousValue.ProviderPayments.Remove(this);
            }
    
            if (Provider != null)
            {
                if (!Provider.ProviderPayments.Contains(this))
                {
                    Provider.ProviderPayments.Add(this);
                }
                if (ProviderId != Provider.Id)
                {
                    ProviderId = Provider.Id;
                }
            }
        }
    
        private void FixupCreatedBy(User previousValue)
        {
            if (CreatedBy != null)
            {
                if (AuthorId != CreatedBy.UserId)
                {
                    AuthorId = CreatedBy.UserId;
                }
            }
        }
    
        private void FixupOrder(Consignment previousValue)
        {
            if (previousValue != null && previousValue.ProviderPayments.Contains(this))
            {
                previousValue.ProviderPayments.Remove(this);
            }
    
            if (Order != null)
            {
                if (!Order.ProviderPayments.Contains(this))
                {
                    Order.ProviderPayments.Add(this);
                }
                if (OrderId != Order.Id)
                {
                    OrderId = Order.Id;
                }
            }
        }

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
