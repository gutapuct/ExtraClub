//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace TonusClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class ReportRecurrency : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual System.Guid CompanyId
        {
            get {return _companyId;}
            set 
    		{ 
    			if(_companyId != value)
    			{
    				_companyId = value; 
    				
    				
    
    				OnPropertyChanged("CompanyId");
    			}
    		}
        }
        private System.Guid _companyId;
    
    
    	[DataMember]
        public virtual System.Guid UserId
        {
            get {return _userId;}
            set 
    		{ 
    			if(_userId != value)
    			{
    				_userId = value; 
    				
    				
    
    				OnPropertyChanged("UserId");
    			}
    		}
        }
        private System.Guid _userId;
    
    
    	[DataMember]
        public virtual string ReportKey
        {
            get {return _reportKey;}
            set 
    		{ 
    			if(_reportKey != value)
    			{
    				_reportKey = value; 
    				
    				
    
    				OnPropertyChanged("ReportKey");
    			}
    		}
        }
        private string _reportKey;
    
    
    	[DataMember]
        public virtual int Recurrency
        {
            get {return _recurrency;}
            set 
    		{ 
    			if(_recurrency != value)
    			{
    				_recurrency = value; 
    				
    				
    
    				OnPropertyChanged("Recurrency");
    			}
    		}
        }
        private int _recurrency;
    
    
    	[DataMember]
        public virtual int PeriodDay
        {
            get {return _periodDay;}
            set 
    		{ 
    			if(_periodDay != value)
    			{
    				_periodDay = value; 
    				
    				
    
    				OnPropertyChanged("PeriodDay");
    			}
    		}
        }
        private int _periodDay;
    
    
    	[DataMember]
        public virtual string Parameters
        {
            get {return _parameters;}
            set 
    		{ 
    			if(_parameters != value)
    			{
    				_parameters = value; 
    				
    				
    
    				OnPropertyChanged("Parameters");
    			}
    		}
        }
        private string _parameters;
    
    
    	[DataMember]
        public virtual Nullable<System.DateTime> LastSentDate
        {
            get {return _lastSentDate;}
            set 
    		{ 
    			if(_lastSentDate != value)
    			{
    				_lastSentDate = value; 
    				
    				if (_lastSentDate.HasValue) _lastSentDate = DateTime.SpecifyKind(_lastSentDate.Value, DateTimeKind.Local);
    
    				OnPropertyChanged("LastSentDate");
    			}
    		}
        }
        private Nullable<System.DateTime> _lastSentDate;
    
    

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
