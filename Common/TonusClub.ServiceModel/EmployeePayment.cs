//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace TonusClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class EmployeePayment : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual System.Guid CompanyId
        {
            get {return _companyId;}
            set 
    		{ 
    			if(_companyId != value)
    			{
    				_companyId = value; 
    				
    				
    
    				OnPropertyChanged("CompanyId");
    			}
    		}
        }
        private System.Guid _companyId;
    
    
    	[DataMember]
        public virtual System.Guid SpendingId
        {
            get {return _spendingId;}
            set 
    		{ 
    			if(_spendingId != value)
    			{
    				_spendingId = value; 
    				
    				
    
    				OnPropertyChanged("SpendingId");
    			}
    		}
        }
        private System.Guid _spendingId;
    
    
    	[DataMember]
        public virtual Nullable<System.Guid> SalarySheetId
        {
            get { return _salarySheetId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_salarySheetId != value)
                    {
                        if (SalarySheet != null && SalarySheet.Id != value)
                        {
                            SalarySheet = null;
                        }
                        _salarySheetId = value;
        
        				OnPropertyChanged("SalarySheetId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _salarySheetId;
    
    
    	[DataMember]
        public virtual System.Guid EmployeeId
        {
            get { return _employeeId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_employeeId != value)
                    {
                        if (Employee != null && Employee.Id != value)
                        {
                            Employee = null;
                        }
                        _employeeId = value;
        
        				OnPropertyChanged("EmployeeId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _employeeId;
    
    
    	[DataMember]
        public virtual short PaymentType
        {
            get {return _paymentType;}
            set 
    		{ 
    			if(_paymentType != value)
    			{
    				_paymentType = value; 
    				
    				
    
    				OnPropertyChanged("PaymentType");
    			}
    		}
        }
        private short _paymentType;
    
    
    	[DataMember]
        public virtual decimal Amount
        {
            get {return _amount;}
            set 
    		{ 
    			if(_amount != value)
    			{
    				_amount = value; 
    				
    				
    
    				OnPropertyChanged("Amount");
    			}
    		}
        }
        private decimal _amount;
    
    
    	[DataMember]
        public virtual System.DateTime Period
        {
            get {return _period;}
            set 
    		{ 
    			if(_period != value)
    			{
    				_period = value; 
    				
    				_period = DateTime.SpecifyKind(_period, DateTimeKind.Local);
    
    				OnPropertyChanged("Period");
    			}
    		}
        }
        private System.DateTime _period;
    
    
    	[DataMember]
        public virtual string Log
        {
            get {return _log;}
            set 
    		{ 
    			if(_log != value)
    			{
    				_log = value; 
    				
    				
    
    				OnPropertyChanged("Log");
    			}
    		}
        }
        private string _log;
    
    
    	[DataMember]
        public virtual Nullable<System.DateTime> CreatedOn
        {
            get {return _createdOn;}
            set 
    		{ 
    			if(_createdOn != value)
    			{
    				_createdOn = value; 
    				
    				if (_createdOn.HasValue) _createdOn = DateTime.SpecifyKind(_createdOn.Value, DateTimeKind.Local);
    
    				OnPropertyChanged("CreatedOn");
    			}
    		}
        }
        private Nullable<System.DateTime> _createdOn;
    
    

        #endregion

        #region Navigation Properties
    
        public virtual Employee Employee
        {
            get { return _employee; }
            set
            {
                if (!ReferenceEquals(_employee, value))
                {
                    var previousValue = _employee;
                    _employee = value;
                    FixupEmployee(previousValue);
                }
            }
        }
        private Employee _employee;
    
        public virtual SalarySheet SalarySheet
        {
            get { return _salarySheet; }
            set
            {
                if (!ReferenceEquals(_salarySheet, value))
                {
                    var previousValue = _salarySheet;
                    _salarySheet = value;
                    FixupSalarySheet(previousValue);
                }
            }
        }
        private SalarySheet _salarySheet;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupEmployee(Employee previousValue)
        {
            if (previousValue != null && previousValue.EmployeePayments.Contains(this))
            {
                previousValue.EmployeePayments.Remove(this);
            }
    
            if (Employee != null)
            {
                if (!Employee.EmployeePayments.Contains(this))
                {
                    Employee.EmployeePayments.Add(this);
                }
                if (EmployeeId != Employee.Id)
                {
                    EmployeeId = Employee.Id;
                }
            }
        }
    
        private void FixupSalarySheet(SalarySheet previousValue)
        {
            if (previousValue != null && previousValue.EmployeePayments.Contains(this))
            {
                previousValue.EmployeePayments.Remove(this);
            }
    
            if (SalarySheet != null)
            {
                if (!SalarySheet.EmployeePayments.Contains(this))
                {
                    SalarySheet.EmployeePayments.Add(this);
                }
                if (SalarySheetId != SalarySheet.Id)
                {
                    SalarySheetId = SalarySheet.Id;
                }
            }
            else if (!_settingFK)
            {
                SalarySheetId = null;
            }
        }

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
