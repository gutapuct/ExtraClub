//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace TonusClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class TreatmentProgramLine : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual System.Guid CompanyId
        {
            get { return _companyId; }
            set
            {
                if (_companyId != value)
                {
                    if (Company != null && Company.CompanyId != value)
                    {
                        Company = null;
                    }
                    _companyId = value;
    
    				OnPropertyChanged("CompanyId");
                }
            }
        }
        private System.Guid _companyId;
    
    
    	[DataMember]
        public virtual System.Guid TreatmentProgramId
        {
            get { return _treatmentProgramId; }
            set
            {
                if (_treatmentProgramId != value)
                {
                    if (TreatmentProgram != null && TreatmentProgram.Id != value)
                    {
                        TreatmentProgram = null;
                    }
                    _treatmentProgramId = value;
    
    				OnPropertyChanged("TreatmentProgramId");
                }
            }
        }
        private System.Guid _treatmentProgramId;
    
    
    	[DataMember]
        public virtual byte Position
        {
            get {return _position;}
            set 
    		{ 
    			if(_position != value)
    			{
    				_position = value; 
    				
    				
    
    				OnPropertyChanged("Position");
    			}
    		}
        }
        private byte _position;
    
    
    	[DataMember]
        public virtual System.Guid TreatmentConfigId
        {
            get { return _treatmentConfigId; }
            set
            {
                if (_treatmentConfigId != value)
                {
                    if (TreatmentConfig != null && TreatmentConfig.Id != value)
                    {
                        TreatmentConfig = null;
                    }
                    _treatmentConfigId = value;
    
    				OnPropertyChanged("TreatmentConfigId");
                }
            }
        }
        private System.Guid _treatmentConfigId;
    
    

        #endregion

        #region Navigation Properties
    
        public virtual Company Company
        {
            get { return _company; }
            set
            {
                if (!ReferenceEquals(_company, value))
                {
                    var previousValue = _company;
                    _company = value;
                    FixupCompany(previousValue);
                }
            }
        }
        private Company _company;
    
        public virtual TreatmentProgram TreatmentProgram
        {
            get { return _treatmentProgram; }
            set
            {
                if (!ReferenceEquals(_treatmentProgram, value))
                {
                    var previousValue = _treatmentProgram;
                    _treatmentProgram = value;
                    FixupTreatmentProgram(previousValue);
                }
            }
        }
        private TreatmentProgram _treatmentProgram;
    
        public virtual TreatmentConfig TreatmentConfig
        {
            get { return _treatmentConfig; }
            set
            {
                if (!ReferenceEquals(_treatmentConfig, value))
                {
                    var previousValue = _treatmentConfig;
                    _treatmentConfig = value;
                    FixupTreatmentConfig(previousValue);
                }
            }
        }
        private TreatmentConfig _treatmentConfig;

        #endregion

        #region Association Fixup
    
        private void FixupCompany(Company previousValue)
        {
            if (previousValue != null && previousValue.TreatmentProgramLines.Contains(this))
            {
                previousValue.TreatmentProgramLines.Remove(this);
            }
    
            if (Company != null)
            {
                if (!Company.TreatmentProgramLines.Contains(this))
                {
                    Company.TreatmentProgramLines.Add(this);
                }
                if (CompanyId != Company.CompanyId)
                {
                    CompanyId = Company.CompanyId;
                }
            }
        }
    
        private void FixupTreatmentProgram(TreatmentProgram previousValue)
        {
            if (previousValue != null && previousValue.TreatmentProgramLines.Contains(this))
            {
                previousValue.TreatmentProgramLines.Remove(this);
            }
    
            if (TreatmentProgram != null)
            {
                if (!TreatmentProgram.TreatmentProgramLines.Contains(this))
                {
                    TreatmentProgram.TreatmentProgramLines.Add(this);
                }
                if (TreatmentProgramId != TreatmentProgram.Id)
                {
                    TreatmentProgramId = TreatmentProgram.Id;
                }
            }
        }
    
        private void FixupTreatmentConfig(TreatmentConfig previousValue)
        {
            if (previousValue != null && previousValue.TreatmentProgramLines.Contains(this))
            {
                previousValue.TreatmentProgramLines.Remove(this);
            }
    
            if (TreatmentConfig != null)
            {
                if (!TreatmentConfig.TreatmentProgramLines.Contains(this))
                {
                    TreatmentConfig.TreatmentProgramLines.Add(this);
                }
                if (TreatmentConfigId != TreatmentConfig.Id)
                {
                    TreatmentConfigId = TreatmentConfig.Id;
                }
            }
        }

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
