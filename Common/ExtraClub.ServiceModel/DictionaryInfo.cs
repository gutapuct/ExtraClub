//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace ExtraClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class DictionaryInfo : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual string DisplayName
        {
            get {return _displayName;}
            set 
    		{ 
    			if(_displayName != value)
    			{
    				_displayName = value; 
    				
    				
    
    				OnPropertyChanged("DisplayName");
    			}
    		}
        }
        private string _displayName;
    
    
    	[DataMember]
        public virtual string IdRow
        {
            get {return _idRow;}
            set 
    		{ 
    			if(_idRow != value)
    			{
    				_idRow = value; 
    				
    				
    
    				OnPropertyChanged("IdRow");
    			}
    		}
        }
        private string _idRow;
    
    
    	[DataMember]
        public virtual string DisplayRow
        {
            get {return _displayRow;}
            set 
    		{ 
    			if(_displayRow != value)
    			{
    				_displayRow = value; 
    				
    				
    
    				OnPropertyChanged("DisplayRow");
    			}
    		}
        }
        private string _displayRow;
    
    
    	[DataMember]
        public virtual Nullable<System.Guid> DictionaryCategoryId
        {
            get { return _dictionaryCategoryId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_dictionaryCategoryId != value)
                    {
                        if (DictionaryCategory != null && DictionaryCategory.Id != value)
                        {
                            DictionaryCategory = null;
                        }
                        _dictionaryCategoryId = value;
        
        				OnPropertyChanged("DictionaryCategoryId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _dictionaryCategoryId;
    
    
    	[DataMember]
        public virtual int PermissionLevel
        {
            get {return _permissionLevel;}
            set 
    		{ 
    			if(_permissionLevel != value)
    			{
    				_permissionLevel = value; 
    				
    				
    
    				OnPropertyChanged("PermissionLevel");
    			}
    		}
        }
        private int _permissionLevel;
    
    
    	[DataMember]
        public virtual string EntitySetName
        {
            get {return _entitySetName;}
            set 
    		{ 
    			if(_entitySetName != value)
    			{
    				_entitySetName = value; 
    				
    				
    
    				OnPropertyChanged("EntitySetName");
    			}
    		}
        }
        private string _entitySetName;
    
    
    	[DataMember]
        public virtual string EntityTypeName
        {
            get {return _entityTypeName;}
            set 
    		{ 
    			if(_entityTypeName != value)
    			{
    				_entityTypeName = value; 
    				
    				
    
    				OnPropertyChanged("EntityTypeName");
    			}
    		}
        }
        private string _entityTypeName;
    
    
    	[DataMember]
        public virtual string AvailRow
        {
            get {return _availRow;}
            set 
    		{ 
    			if(_availRow != value)
    			{
    				_availRow = value; 
    				
    				
    
    				OnPropertyChanged("AvailRow");
    			}
    		}
        }
        private string _availRow;
    
    
    	[DataMember]
        public virtual string DisplayNameEn
        {
            get {return _displayNameEn;}
            set 
    		{ 
    			if(_displayNameEn != value)
    			{
    				_displayNameEn = value; 
    				
    				
    
    				OnPropertyChanged("DisplayNameEn");
    			}
    		}
        }
        private string _displayNameEn;
    
    
    	[DataMember]
        public virtual string DisplayRowEn
        {
            get {return _displayRowEn;}
            set 
    		{ 
    			if(_displayRowEn != value)
    			{
    				_displayRowEn = value; 
    				
    				
    
    				OnPropertyChanged("DisplayRowEn");
    			}
    		}
        }
        private string _displayRowEn;
    
    

        #endregion

        #region Navigation Properties
    
        public virtual DictionaryCategory DictionaryCategory
        {
            get { return _dictionaryCategory; }
            set
            {
                if (!ReferenceEquals(_dictionaryCategory, value))
                {
                    var previousValue = _dictionaryCategory;
                    _dictionaryCategory = value;
                    FixupDictionaryCategory(previousValue);
                }
            }
        }
        private DictionaryCategory _dictionaryCategory;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupDictionaryCategory(DictionaryCategory previousValue)
        {
            if (previousValue != null && previousValue.DictionaryInfos.Contains(this))
            {
                previousValue.DictionaryInfos.Remove(this);
            }
    
            if (DictionaryCategory != null)
            {
                if (!DictionaryCategory.DictionaryInfos.Contains(this))
                {
                    DictionaryCategory.DictionaryInfos.Add(this);
                }
                if (DictionaryCategoryId != DictionaryCategory.Id)
                {
                    DictionaryCategoryId = DictionaryCategory.Id;
                }
            }
            else if (!_settingFK)
            {
                DictionaryCategoryId = null;
            }
        }

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
