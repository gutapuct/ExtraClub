//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace ExtraClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class GoodActionLine : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual System.Guid GoodActionId
        {
            get { return _goodActionId; }
            set
            {
                if (_goodActionId != value)
                {
                    if (GoodAction != null && GoodAction.Id != value)
                    {
                        GoodAction = null;
                    }
                    _goodActionId = value;
    
    				OnPropertyChanged("GoodActionId");
                }
            }
        }
        private System.Guid _goodActionId;
    
    
    	[DataMember]
        public virtual System.Guid GoodId
        {
            get { return _goodId; }
            set
            {
                if (_goodId != value)
                {
                    if (Good != null && Good.Id != value)
                    {
                        Good = null;
                    }
                    _goodId = value;
    
    				OnPropertyChanged("GoodId");
                }
            }
        }
        private System.Guid _goodId;
    
    
    	[DataMember]
        public virtual int Amount
        {
            get {return _amount;}
            set 
    		{ 
    			if(_amount != value)
    			{
    				_amount = value; 
    				
    				
    
    				OnPropertyChanged("Amount");
    			}
    		}
        }
        private int _amount;
    
    
    	[DataMember]
        public virtual System.Guid CompanyId
        {
            get {return _companyId;}
            set 
    		{ 
    			if(_companyId != value)
    			{
    				_companyId = value; 
    				
    				
    
    				OnPropertyChanged("CompanyId");
    			}
    		}
        }
        private System.Guid _companyId;
    
    

        #endregion

        #region Navigation Properties
    
        public virtual GoodAction GoodAction
        {
            get { return _goodAction; }
            set
            {
                if (!ReferenceEquals(_goodAction, value))
                {
                    var previousValue = _goodAction;
                    _goodAction = value;
                    FixupGoodAction(previousValue);
                }
            }
        }
        private GoodAction _goodAction;
    
        public virtual Good Good
        {
            get { return _good; }
            set
            {
                if (!ReferenceEquals(_good, value))
                {
                    var previousValue = _good;
                    _good = value;
                    FixupGood(previousValue);
                }
            }
        }
        private Good _good;

        #endregion

        #region Association Fixup
    
        private void FixupGoodAction(GoodAction previousValue)
        {
            if (previousValue != null && previousValue.GoodActionLines.Contains(this))
            {
                previousValue.GoodActionLines.Remove(this);
            }
    
            if (GoodAction != null)
            {
                if (!GoodAction.GoodActionLines.Contains(this))
                {
                    GoodAction.GoodActionLines.Add(this);
                }
                if (GoodActionId != GoodAction.Id)
                {
                    GoodActionId = GoodAction.Id;
                }
            }
        }
    
        private void FixupGood(Good previousValue)
        {
            if (previousValue != null && previousValue.GoodActionLines.Contains(this))
            {
                previousValue.GoodActionLines.Remove(this);
            }
    
            if (Good != null)
            {
                if (!Good.GoodActionLines.Contains(this))
                {
                    Good.GoodActionLines.Add(this);
                }
                if (GoodId != Good.Id)
                {
                    GoodId = Good.Id;
                }
            }
        }

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
