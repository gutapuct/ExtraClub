//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace ExtraClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class Call : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual System.Guid CompanyId
        {
            get {return _companyId;}
            set 
    		{ 
    			if(_companyId != value)
    			{
    				_companyId = value; 
    				
    				
    
    				OnPropertyChanged("CompanyId");
    			}
    		}
        }
        private System.Guid _companyId;
    
    
    	[DataMember]
        public virtual System.Guid DivisionId
        {
            get { return _divisionId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_divisionId != value)
                    {
                        if (Division != null && Division.Id != value)
                        {
                            Division = null;
                        }
                        _divisionId = value;
        
        				OnPropertyChanged("DivisionId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _divisionId;
    
    
    	[DataMember]
        public virtual System.Guid AuthorId
        {
            get { return _authorId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_authorId != value)
                    {
                        if (CreatedBy != null && CreatedBy.UserId != value)
                        {
                            CreatedBy = null;
                        }
                        _authorId = value;
        
        				OnPropertyChanged("AuthorId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _authorId;
    
    
    	[DataMember]
        public virtual System.DateTime StartAt
        {
            get {return _startAt;}
            set 
    		{ 
    			if(_startAt != value)
    			{
    				_startAt = value; 
    				
    				_startAt = DateTime.SpecifyKind(_startAt, DateTimeKind.Local);
    
    				OnPropertyChanged("StartAt");
    			}
    		}
        }
        private System.DateTime _startAt;
    
    
    	[DataMember]
        public virtual string Log
        {
            get {return _log;}
            set 
    		{ 
    			if(_log != value)
    			{
    				_log = value; 
    				
    				
    
    				OnPropertyChanged("Log");
    			}
    		}
        }
        private string _log;
    
    
    	[DataMember]
        public virtual int ResultType
        {
            get {return _resultType;}
            set 
    		{ 
    			if(_resultType != value)
    			{
    				_resultType = value; 
    				
    				
    
    				OnPropertyChanged("ResultType");
    			}
    		}
        }
        private int _resultType;
    
    
    	[DataMember]
        public virtual bool IsIncoming
        {
            get {return _isIncoming;}
            set 
    		{ 
    			if(_isIncoming != value)
    			{
    				_isIncoming = value; 
    				
    				
    
    				OnPropertyChanged("IsIncoming");
    			}
    		}
        }
        private bool _isIncoming;
    
    
    	[DataMember]
        public virtual Nullable<System.Guid> CustomerId
        {
            get { return _customerId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_customerId != value)
                    {
                        if (Customer != null && Customer.Id != value)
                        {
                            Customer = null;
                        }
                        _customerId = value;
        
        				OnPropertyChanged("CustomerId");
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _customerId;
    
    
    	[DataMember]
        public virtual string Goal
        {
            get {return _goal;}
            set 
    		{ 
    			if(_goal != value)
    			{
    				_goal = value; 
    				
    				
    
    				OnPropertyChanged("Goal");
    			}
    		}
        }
        private string _goal;
    
    
    	[DataMember]
        public virtual string Result
        {
            get {return _result;}
            set 
    		{ 
    			if(_result != value)
    			{
    				_result = value; 
    				
    				
    
    				OnPropertyChanged("Result");
    			}
    		}
        }
        private string _result;
    
    

        #endregion

        #region Navigation Properties
    
        public virtual Customer Customer
        {
            get { return _customer; }
            set
            {
                if (!ReferenceEquals(_customer, value))
                {
                    var previousValue = _customer;
                    _customer = value;
                    FixupCustomer(previousValue);
                }
            }
        }
        private Customer _customer;
    
        public virtual Division Division
        {
            get { return _division; }
            set
            {
                if (!ReferenceEquals(_division, value))
                {
                    var previousValue = _division;
                    _division = value;
                    FixupDivision(previousValue);
                }
            }
        }
        private Division _division;
    
        public virtual User CreatedBy
        {
            get { return _createdBy; }
            set
            {
                if (!ReferenceEquals(_createdBy, value))
                {
                    var previousValue = _createdBy;
                    _createdBy = value;
                    FixupCreatedBy(previousValue);
                }
            }
        }
        private User _createdBy;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCustomer(Customer previousValue)
        {
            if (previousValue != null && previousValue.Calls.Contains(this))
            {
                previousValue.Calls.Remove(this);
            }
    
            if (Customer != null)
            {
                if (!Customer.Calls.Contains(this))
                {
                    Customer.Calls.Add(this);
                }
                if (CustomerId != Customer.Id)
                {
                    CustomerId = Customer.Id;
                }
            }
            else if (!_settingFK)
            {
                CustomerId = null;
            }
        }
    
        private void FixupDivision(Division previousValue)
        {
            if (previousValue != null && previousValue.Calls.Contains(this))
            {
                previousValue.Calls.Remove(this);
            }
    
            if (Division != null)
            {
                if (!Division.Calls.Contains(this))
                {
                    Division.Calls.Add(this);
                }
                if (DivisionId != Division.Id)
                {
                    DivisionId = Division.Id;
                }
            }
        }
    
        private void FixupCreatedBy(User previousValue)
        {
            if (previousValue != null && previousValue.Calls.Contains(this))
            {
                previousValue.Calls.Remove(this);
            }
    
            if (CreatedBy != null)
            {
                if (!CreatedBy.Calls.Contains(this))
                {
                    CreatedBy.Calls.Add(this);
                }
                if (AuthorId != CreatedBy.UserId)
                {
                    AuthorId = CreatedBy.UserId;
                }
            }
        }

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
