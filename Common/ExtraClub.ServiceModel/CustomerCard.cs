//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace ExtraClub.ServiceModel
{
    
    [DataContract]
    [Serializable]
    public partial class CustomerCard : INotifyPropertyChanged
    {
    	private bool _deleted;
    
    	[DataMember]
    	public bool Deleted {
    		get { return _deleted; }
    		set {
    			if (value != _deleted) Modified = true;
    			_deleted = value;
    		}
    	}
    
    	private bool _modified = false;
    	public bool Modified{
    		get
    		{
    			return _modified;
    		}
    		set
    		{
    			if (_modified != value)
    			{
    				_modified = value;
    				OnPropertyChanged("Modified");
    			}
    		}
    	}
    
    	[OnDeserialized()]
        private void OnDeserializedMethod(StreamingContext context)
        {
            _modified = false;
    		OnDeserialized();
        }
    
    	partial void OnDeserialized();
    
    	partial void OnPropertyChangedInternal(string propertyName);
    
        #region Primitive Properties
    	[DataMember]
        public virtual System.Guid Id
        {
            get {return _id;}
            set 
    		{ 
    			if(_id != value)
    			{
    				_id = value; 
    				
    				
    
    				OnPropertyChanged("Id");
    			}
    		}
        }
        private System.Guid _id;
    
    
    	[DataMember]
        public virtual System.Guid AuthorId
        {
            get { return _authorId; }
            set
            {
                if (_authorId != value)
                {
                    if (CreatedBy != null && CreatedBy.UserId != value)
                    {
                        CreatedBy = null;
                    }
                    _authorId = value;
    
    				OnPropertyChanged("AuthorId");
                }
            }
        }
        private System.Guid _authorId;
    
    
    	[DataMember]
        public virtual System.Guid CustomerId
        {
            get { return _customerId; }
            set
            {
                if (_customerId != value)
                {
                    if (Customer != null && Customer.Id != value)
                    {
                        Customer = null;
                    }
                    _customerId = value;
    
    				OnPropertyChanged("CustomerId");
                }
            }
        }
        private System.Guid _customerId;
    
    
    	[DataMember]
        public virtual string CardBarcode
        {
            get {return _cardBarcode;}
            set 
    		{ 
    			if(_cardBarcode != value)
    			{
    				_cardBarcode = value; 
    				
    				
    
    				OnPropertyChanged("CardBarcode");
    			}
    		}
        }
        private string _cardBarcode;
    
    
    	[DataMember]
        public virtual System.DateTime EmitDate
        {
            get {return _emitDate;}
            set 
    		{ 
    			if(_emitDate != value)
    			{
    				_emitDate = value; 
    				
    				_emitDate = DateTime.SpecifyKind(_emitDate, DateTimeKind.Local);
    
    				OnPropertyChanged("EmitDate");
    			}
    		}
        }
        private System.DateTime _emitDate;
    
    
    	[DataMember]
        public virtual System.Guid CustomerCardTypeId
        {
            get { return _customerCardTypeId; }
            set
            {
                if (_customerCardTypeId != value)
                {
                    if (CustomerCardType != null && CustomerCardType.Id != value)
                    {
                        CustomerCardType = null;
                    }
                    _customerCardTypeId = value;
    
    				OnPropertyChanged("CustomerCardTypeId");
                }
            }
        }
        private System.Guid _customerCardTypeId;
    
    
    	[DataMember]
        public virtual decimal Price
        {
            get {return _price;}
            set 
    		{ 
    			if(_price != value)
    			{
    				_price = value; 
    				
    				
    
    				OnPropertyChanged("Price");
    			}
    		}
        }
        private decimal _price;
    
    
    	[DataMember]
        public virtual decimal Discount
        {
            get {return _discount;}
            set 
    		{ 
    			if(_discount != value)
    			{
    				_discount = value; 
    				
    				
    
    				OnPropertyChanged("Discount");
    			}
    		}
        }
        private decimal _discount;
    
    
    	[DataMember]
        public virtual string Comment
        {
            get {return _comment;}
            set 
    		{ 
    			if(_comment != value)
    			{
    				_comment = value; 
    				
    				
    
    				OnPropertyChanged("Comment");
    			}
    		}
        }
        private string _comment;
    
    
    	[DataMember]
        public virtual System.Guid CompanyId
        {
            get {return _companyId;}
            set 
    		{ 
    			if(_companyId != value)
    			{
    				_companyId = value; 
    				
    				
    
    				OnPropertyChanged("CompanyId");
    			}
    		}
        }
        private System.Guid _companyId;
    
    
    	[DataMember]
        public virtual System.Guid DivisionId
        {
            get { return _divisionId; }
            set
            {
                if (_divisionId != value)
                {
                    if (Division != null && Division.Id != value)
                    {
                        Division = null;
                    }
                    _divisionId = value;
    
    				OnPropertyChanged("DivisionId");
                }
            }
        }
        private System.Guid _divisionId;
    
    
    	[DataMember]
        public virtual bool IsActive
        {
            get {return _isActive;}
            set 
    		{ 
    			if(_isActive != value)
    			{
    				_isActive = value; 
    				
    				
    
    				OnPropertyChanged("IsActive");
    			}
    		}
        }
        private bool _isActive;
    
    
    	[DataMember]
        public virtual int PmtTypeId
        {
            get {return _pmtTypeId;}
            set 
    		{ 
    			if(_pmtTypeId != value)
    			{
    				_pmtTypeId = value; 
    				
    				
    
    				OnPropertyChanged("PmtTypeId");
    			}
    		}
        }
        private int _pmtTypeId;
    
    

        #endregion

        #region Navigation Properties
    
        public virtual Customer Customer
        {
            get { return _customer; }
            set
            {
                if (!ReferenceEquals(_customer, value))
                {
                    var previousValue = _customer;
                    _customer = value;
                    FixupCustomer(previousValue);
                }
            }
        }
        private Customer _customer;
    
        public virtual User CreatedBy
        {
            get { return _createdBy; }
            set
            {
                if (!ReferenceEquals(_createdBy, value))
                {
                    var previousValue = _createdBy;
                    _createdBy = value;
                    FixupCreatedBy(previousValue);
                }
            }
        }
        private User _createdBy;
    
        public virtual CustomerCardType CustomerCardType
        {
            get { return _customerCardType; }
            set
            {
                if (!ReferenceEquals(_customerCardType, value))
                {
                    var previousValue = _customerCardType;
                    _customerCardType = value;
                    FixupCustomerCardType(previousValue);
                }
            }
        }
        private CustomerCardType _customerCardType;
    
        public virtual Division Division
        {
            get { return _division; }
            set
            {
                if (!ReferenceEquals(_division, value))
                {
                    var previousValue = _division;
                    _division = value;
                    FixupDivision(previousValue);
                }
            }
        }
        private Division _division;

        #endregion

        #region Association Fixup
    
        private void FixupCustomer(Customer previousValue)
        {
            if (previousValue != null && previousValue.CustomerCards.Contains(this))
            {
                previousValue.CustomerCards.Remove(this);
            }
    
            if (Customer != null)
            {
                if (!Customer.CustomerCards.Contains(this))
                {
                    Customer.CustomerCards.Add(this);
                }
                if (CustomerId != Customer.Id)
                {
                    CustomerId = Customer.Id;
                }
            }
        }
    
        private void FixupCreatedBy(User previousValue)
        {
            if (CreatedBy != null)
            {
                if (AuthorId != CreatedBy.UserId)
                {
                    AuthorId = CreatedBy.UserId;
                }
            }
        }
    
        private void FixupCustomerCardType(CustomerCardType previousValue)
        {
            if (previousValue != null && previousValue.CustomerCards.Contains(this))
            {
                previousValue.CustomerCards.Remove(this);
            }
    
            if (CustomerCardType != null)
            {
                if (!CustomerCardType.CustomerCards.Contains(this))
                {
                    CustomerCardType.CustomerCards.Add(this);
                }
                if (CustomerCardTypeId != CustomerCardType.Id)
                {
                    CustomerCardTypeId = CustomerCardType.Id;
                }
            }
        }
    
        private void FixupDivision(Division previousValue)
        {
            if (previousValue != null && previousValue.CustomerCards.Contains(this))
            {
                previousValue.CustomerCards.Remove(this);
            }
    
            if (Division != null)
            {
                if (!Division.CustomerCards.Contains(this))
                {
                    Division.CustomerCards.Add(this);
                }
                if (DivisionId != Division.Id)
                {
                    DivisionId = Division.Id;
                }
            }
        }

        #endregion

    
    	public event PropertyChangedEventHandler PropertyChanged;
    
    	protected void OnPropertyChanged(string propertyName)
        {
    		Modified = true;
    
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
    		
    		OnPropertyChangedInternal(propertyName);
        }
    }
}
